"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[940],{1940:(D,s,n)=>{n.r(s),n.d(s,{StylingConfigurationModule:()=>w});var u=n(9808),r=n(3075),p=n(8087),g=n(9870),d=n(7322),m=n(156),o=n(5e3);let f=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=o.oAB({type:t}),t.\u0275inj=o.cJS({imports:[[u.ez,d.lN,m.LD,r.UX]]}),t})();var l=n(5031),h=n(8453),c=n(5241),y=n(6998),Z=n.n(y),A=n(1879);c.registerLanguage("typescript",Z());let T=(()=>{class t{constructor(e){this.webTitleService=e,this.ngxAwesomePopupModuleBasic="// app.module imports:\nNgxAwesomePopupModule.forRoot()",this.ngxAwesomePopupModule="// app.module imports:\nNgxAwesomePopupModule.forRoot({\n    colorList: {\n           primary  : '#ff9e00', // optional\n           secondary: '#989ea5', // optional\n           info     : '#2f8ee5', // optional\n           success  : '#3caea3', // optional\n           warning  : '#ffc107', // optional\n           danger   : '#e46464', // optional\n           light    : '#fbfbfb', // optional\n           dark     : '#343a40', // optional\n           customOne: '#34fa40', // optional\n           customTwo: '#343f40'  // optional (up to custom five)\n          }\n})",this.toastNotificationConfigModuleBasic="// app.module imports:\nToastNotificationConfigModule.forRoot()",this.toastNotificationConfigModule="// app.module imports:\nToastNotificationConfigModule.forRoot({\n   ToastCoreConfig: {\n      toastPosition: ToastPositionEnum.TOP_FULL_WIDTH, // check API documentation ToastPositionEnum\n      progressBar: ToastprogressBarEnum.INCREASE, // check API documentation ToastprogressBarEnum\n      toastUserViewType: toastUserViewTypeEnum.SIMPLE, // check API documentation toastUserViewTypeEnum\n      layoutType: DialogLayoutDisplay.WARNING, // check API documentation DialogLayoutDisplay\n      buttonPosition: 'right', // check API documentation VerticalPosition\n      textPosition: 'right', // check API documentation VerticalPosition\n      ConfirmLabel: 'Confirm', // default confirmation button label\n      DeclineLabel: 'Decline', // default declination button label\n      autoCloseDelay: 3000, // Milliseconds it will be ignored if buttons are included.\n      disableIcon: true, // Disable icon by default\n      allowHtmlMessage: true, // Allow HTML content in message by default\n      // Optional default dispatch object.\n      Dispatch: {\n        Title: 'Global default title.',\n        Message: 'Global default message.'\n      },\n      // openInElementID: 'custom-toast-wrapper-id', // it can be any element as wrapper anywhere in the DOM\n   },\n   GlobalSettings: {\n      allowedNotificationsAtOnce: 4  // The number of toast notifications that can be shown at once.\n   },\n   // custom buttons overrides the buttons set with ConfirmLabel & DeclineLabel\n   Buttons: [\n     new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY), // check API documentation ButtonLayoutDisplay\n     new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n  ]\n})",this.confirmBoxConfigModuleBasic="// app.module imports:\nConfirmBoxConfigModule.forRoot()",this.confirmBoxConfigModule="// app.module imports:\nConfirmBoxConfigModule.forRoot({\n   ConfirmBoxCoreConfig: {\n      width: '50%', // string value with '%' or 'px' as the suffix\n      height: '50%', // string value with '%' or 'px' as the suffix\n      buttonPosition: 'right', // check API documentation VerticalPosition\n      layoutType: DialogLayoutDisplay.WARNING, // check API documentation DialogLayoutDisplay\n      Dispatch: {\n        Title: 'Global default title.',\n        Message: 'Global default message.'\n      },\n      ConfirmLabel: 'Confirm', // default confirmation button label\n      DeclineLabel: 'Decline', // default declination button label\n      disableIcon: true, // Disable icon by default\n      allowHtmlMessage: true, // Allow HTML content in message by default\n   }\n   // custom buttons overrides the buttons set with ConfirmLabel & DeclineLabel\n   Buttons: [\n     new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY), // check API documentation ButtonLayoutDisplay\n     new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n  ]\n})",this.dialogConfigModuleBasic="// app.module imports:\nDialogConfigModule.forRoot()",this.dialogConfigModule="// app.module imports:\nDialogConfigModule.forRoot({\n   DialogCoreConfig: {\n      layoutType: DialogLayoutDisplay.WARNING, // check API documentation DialogLayoutDisplay\n      buttonPosition: 'right', // check API documentation VerticalPosition\n      DisplayLoader: true, // display the integrated loader by default\n      // LoaderComponent: TheRealAngularComponent, // it will appear as loader before content shows\n   },\n   Buttons: [\n     new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY), // check API documentation ButtonLayoutDisplay\n     new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n  ]\n})",e.setTitle("Global config")}ngAfterViewInit(){c.highlightAll()}}return t.\u0275fac=function(e){return new(e||t)(o.Y36(A.Y))},t.\u0275cmp=o.Xpm({type:t,selectors:[["app-global-config"]],decls:57,vars:8,consts:[[1,"container"],[1,"row","m-4"],[1,"px-4","pt-2","mt-2","text-start"],[1,"row","m-0","mb-5"],["id","anchorGlobalConfig"],[1,"typescript",3,"innerHTML"],["routerLink","/documentation/interface-IGlobalUserConfig"]],template:function(e,a){1&e&&(o.TgZ(0,"div",0),o.TgZ(1,"div",1),o.TgZ(2,"div",2),o.TgZ(3,"div",3),o.TgZ(4,"h3"),o._uU(5,"NgxAwesomePopupModule"),o.qZA(),o.TgZ(6,"p"),o._uU(7," Imported module globally can have own settings which will reflect on the entire application. "),o.qZA(),o.TgZ(8,"h6",4),o._uU(9,"Basic example:"),o.qZA(),o.TgZ(10,"pre"),o._UZ(11,"code",5),o.qZA(),o.TgZ(12,"h6"),o._uU(13,"Example with configuration:"),o.qZA(),o.TgZ(14,"p"),o._uU(15,' The "'),o.TgZ(16,"a",6),o._uU(17,"colorList"),o.qZA(),o._uU(18,'" object gives the ability to harmonize the colors of the application with different awesome popup types. The shade of '),o.TgZ(19,"strong"),o._uU(20,'"Primary"'),o.qZA(),o._uU(21," color is used for overlay and primary buttons, we suggest that you match this color with your application dominant color. "),o.qZA(),o.TgZ(22,"pre"),o._UZ(23,"code",5),o.qZA(),o.qZA(),o.TgZ(24,"div",3),o.TgZ(25,"h3"),o._uU(26,"ToastNotificationConfigModule"),o.qZA(),o.TgZ(27,"h6"),o._uU(28,"Basic example:"),o.qZA(),o.TgZ(29,"pre"),o._UZ(30,"code",5),o.qZA(),o.TgZ(31,"h6"),o._uU(32,"Example with configuration:"),o.qZA(),o.TgZ(33,"pre"),o._UZ(34,"code",5),o.qZA(),o.qZA(),o.TgZ(35,"div",3),o.TgZ(36,"h3"),o._uU(37,"ConfirmBoxConfigModule"),o.qZA(),o.TgZ(38,"h6"),o._uU(39,"Basic example:"),o.qZA(),o.TgZ(40,"pre"),o._UZ(41,"code",5),o.qZA(),o.TgZ(42,"h6"),o._uU(43,"Example with configuration:"),o.qZA(),o.TgZ(44,"pre"),o._UZ(45,"code",5),o.qZA(),o.qZA(),o.TgZ(46,"div",3),o.TgZ(47,"h3"),o._uU(48,"DialogConfigModule"),o.qZA(),o.TgZ(49,"h6"),o._uU(50,"Basic example:"),o.qZA(),o.TgZ(51,"pre"),o._UZ(52,"code",5),o.qZA(),o.TgZ(53,"h6"),o._uU(54,"Example with configuration:"),o.qZA(),o.TgZ(55,"pre"),o._UZ(56,"code",5),o.qZA(),o.qZA(),o.qZA(),o.qZA(),o.qZA()),2&e&&(o.xp6(11),o.Q6J("innerHTML",a.ngxAwesomePopupModuleBasic,o.oJD),o.xp6(12),o.Q6J("innerHTML",a.ngxAwesomePopupModule,o.oJD),o.xp6(7),o.Q6J("innerHTML",a.toastNotificationConfigModuleBasic,o.oJD),o.xp6(4),o.Q6J("innerHTML",a.toastNotificationConfigModule,o.oJD),o.xp6(7),o.Q6J("innerHTML",a.confirmBoxConfigModuleBasic,o.oJD),o.xp6(4),o.Q6J("innerHTML",a.confirmBoxConfigModule,o.oJD),o.xp6(7),o.Q6J("innerHTML",a.dialogConfigModuleBasic,o.oJD),o.xp6(4),o.Q6J("innerHTML",a.dialogConfigModule,o.oJD))},directives:[l.yS],styles:[""]}),t})();var C=n(228);const b=[{path:"global-config",component:T},{path:"styling",component:(()=>{class t{constructor(){}ngOnInit(){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=o.Xpm({type:t,selectors:[["app-styling"]],decls:37,vars:0,consts:[[1,"container"],[1,"row","m-4"],[1,"px-4","pt-2","mt-2","text-start"],[1,"row","m-0","mb-5"],[1,"row","m-0","mb-2","new-feature-block"],[1,"secondary-text"],[1,"row","m-0","mb-2"],[1,"row","m-0","mb-5","new-feature-block"],["href","https://github.com/costlydeveloper/ngx-awesome-popup/tree/master/styles","target","_blank"],[1,"mt-4"],[1,"typescript","hljs"],["routerLink","/config/global-config","fragment","anchorGlobalConfig"]],template:function(e,a){1&e&&(o.TgZ(0,"div",0),o.TgZ(1,"div",1),o.TgZ(2,"div",2),o.TgZ(3,"div",3),o.TgZ(4,"h3"),o._uU(5,"Styling"),o.qZA(),o.qZA(),o.TgZ(6,"div",4),o.TgZ(7,"small",5),o._uU(8,"To ensure maximal adaptability and speed there is no any css in the package bundle. It needs to be included in the project separately as in the first two examples below."),o.qZA(),o.qZA(),o.TgZ(9,"div",6),o._UZ(10,"app-include-scss-block"),o.qZA(),o.TgZ(11,"div",7),o.TgZ(12,"h5"),o._uU(13,"Make your own styles"),o.qZA(),o.TgZ(14,"small",5),o._uU(15," If you are advance user, you can "),o.TgZ(16,"strong"),o._uU(17,"make your own style"),o.qZA(),o._uU(18,". We suggested to clone / copy "),o.TgZ(19,"a",8),o._uU(20,"scss folder from our Github repo"),o.qZA(),o._uU(21," directly to your project, then include it as the example below. After that you will be able to edit scss files by your needs."),o.qZA(),o.TgZ(22,"p",9),o._uU(23," 2. Import theme cloned SCSS to your root SCSS style file "),o.TgZ(24,"strong"),o._uU(25,"styles.scss"),o.qZA(),o._uU(26,": "),o.qZA(),o.TgZ(27,"pre"),o.TgZ(28,"code",10),o._uU(29,'\n@import "path-cloned-styles/theme";\n            '),o.qZA(),o.qZA(),o.qZA(),o.TgZ(30,"div",3),o.TgZ(31,"h5"),o._uU(32," Generic styling is available through a configuration setup, typescript. "),o.qZA(),o.TgZ(33,"p"),o._uU(34," Check the example at "),o.TgZ(35,"a",11),o._uU(36,"Global Config"),o.qZA(),o.qZA(),o.qZA(),o.qZA(),o.qZA(),o.qZA())},directives:[C.R,l.yS],styles:[""]}),t})()},{path:"showcase",component:h.k}];let M=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=o.oAB({type:t}),t.\u0275inj=o.cJS({imports:[[l.Bz.forChild(b)],l.Bz]}),t})(),w=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=o.oAB({type:t}),t.\u0275inj=o.cJS({imports:[[u.ez,M,r.u5,p.e4,f,g._]]}),t})()}}]);