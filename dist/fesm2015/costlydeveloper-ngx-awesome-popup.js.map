{"version":3,"file":"costlydeveloper-ngx-awesome-popup.js","sources":["../../ngx-awesome-popup/locator.service.ts","../../ngx-awesome-popup/core/enums.ts","../../ngx-awesome-popup/core/global-config.service.ts","../../ngx-awesome-popup/core/global-classes.ts","../../ngx-awesome-popup/types/confirm-box/core/confirm-box-config.service.ts","../../ngx-awesome-popup/core/dialog-injector.ts","../../ngx-awesome-popup/core/animations.ts","../../ngx-awesome-popup/types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component.ts","../../ngx-awesome-popup/types/confirm-box/core/confirm-box-service.ts","../../ngx-awesome-popup/types/confirm-box/core/classes.ts","../../ngx-awesome-popup/default-loader/default-loader.component.ts","../../ngx-awesome-popup/types/dialog/core/dialog-config.service.ts","../../ngx-awesome-popup/core/insertion-loader.directive.ts","../../ngx-awesome-popup/core/insertion.directive.ts","../../ngx-awesome-popup/types/dialog/dialog-wrapper/dialog-wrapper.component.ts","../../ngx-awesome-popup/types/dialog/core/dialog.service.ts","../../ngx-awesome-popup/types/dialog/core/classes.ts","../../ngx-awesome-popup/types/toast-notification/core/enums.ts","../../ngx-awesome-popup/types/toast-notification/core/toast-notification-config.service.ts","../../ngx-awesome-popup/types/toast-notification/core/wrapper-abstraction.ts","../../ngx-awesome-popup/types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component.ts","../../ngx-awesome-popup/types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component.ts","../../ngx-awesome-popup/types/toast-notification/core/toast-notification.service.ts","../../ngx-awesome-popup/types/toast-notification/core/classes.ts","../../ngx-awesome-popup/ngx-awesome-popup.module.ts","../../public_api.ts","../../costlydeveloper-ngx-awesome-popup.ts"],"sourcesContent":["import {Injector} from '@angular/core'; // @dynamic\n\n// @dynamic\nexport class ServiceLocator {\n  static injector: Injector;\n}\n","export enum DialogLayoutDisplay {\n  NONE = 0,\n  SUCCESS = 1,\n  INFO = 2,\n  WARNING = 3,\n  DANGER = 4,\n}\n\nexport enum ButtonLayoutDisplay {\n  NONE = 0,\n  SUCCESS = 1,\n  INFO = 2,\n  WARNING = 3,\n  DANGER = 4,\n  DARK = 5,\n  LIGHT = 6,\n  PRIMARY = 7,\n  SECONDARY = 8,\n  LINK = 9,\n}\n\nexport enum ColorVariance {\n  SUCCESS = 1,\n  INFO = 2,\n  WARNING = 3,\n  DANGER = 4,\n  DARK = 5,\n  LIGHT = 6,\n  PRIMARY = 7,\n  SECONDARY = 8,\n}\n\nexport type VerticalPosition = \"left\" | \"center\" | \"right\";\n","import { Inject, Injectable } from '@angular/core';\nimport { ColorVariance } from './enums';\nimport {\n  ColorProvider,\n  GlobalConfig,\n  GlobalUserConfig\n} from './global-classes';\nimport {\n  IColorObject,\n  IColorProvider,\n  IColorTypes,\n  IGlobalConfig,\n  IGlobalUserConfig\n} from './global-interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalConfigService {\n  productionGlobalConfig: IGlobalConfig = new GlobalConfig();\n  private authorGlobalConfig: IGlobalConfig = new GlobalConfig();\n  private userGeneratedConfig: IGlobalUserConfig;\n\n  constructor(\n    @Inject('cdGlobalConfig')\n    private userGlobalConfig: IGlobalUserConfig\n  ) {\n    this.userGeneratedConfig = new GlobalUserConfig(userGlobalConfig);\n\n    // region *** author global config values (if there is no user input) ***\n    this.authorGlobalConfig.DisplayColor.Primary = null; // new ColorProvider('#ff9e00');\n    this.authorGlobalConfig.DisplayColor.Secondary = null; // new ColorProvider('#989ea5');\n    this.authorGlobalConfig.DisplayColor.Success = null; // new ColorProvider('#3caea3');\n    this.authorGlobalConfig.DisplayColor.Info = null; // new ColorProvider('#2f8ee5');\n    this.authorGlobalConfig.DisplayColor.Warning = null; // new ColorProvider('#ffc107');\n    this.authorGlobalConfig.DisplayColor.Danger = null; // new ColorProvider('#e46464');\n    this.authorGlobalConfig.DisplayColor.Light = null; // new ColorProvider('#f8f9fa');\n    this.authorGlobalConfig.DisplayColor.Dark = null; // new ColorProvider('#343a40');\n    // endregion\n\n    this.productionGlobalConfig.DisplayColor = this.authorGlobalConfig.DisplayColor;\n\n    // region *** global userConfig (user input app-module) ***\n    this.setUserColors(this.userGeneratedConfig.ColorList);\n\n    // endregion\n\n    this.setNodeStyles(this.productionGlobalConfig.DisplayColor);\n  }\n\n  resetStyles(): void {\n    this.setUserColors(this.userGeneratedConfig.ColorList);\n    this.setNodeStyles(this.productionGlobalConfig.DisplayColor, true);\n  }\n\n  setNodeStyles(_ProductionColorTypes: IColorObject, _Reset: boolean = false) {\n    if (_Reset) {\n      let evolveDialogStyleNode = document.getElementById(\n        'ngx-awesome-popup-glob-styles'\n      ) as HTMLStyleElement;\n      if (evolveDialogStyleNode) {\n        evolveDialogStyleNode.remove();\n      }\n    }\n    this.setToastStyles();\n\n    Object.keys(_ProductionColorTypes).forEach(key => {\n      if (_ProductionColorTypes[key]) {\n        this.setButtonStyling(key, _ProductionColorTypes[key]);\n        this.setIconStyling(key, _ProductionColorTypes[key]);\n        this.setToastStyling(key, _ProductionColorTypes[key]);\n        this.setDialogFrame(key, _ProductionColorTypes[key]);\n\n        if (ColorVariance[key.toUpperCase()] === ColorVariance.PRIMARY) {\n          this.getSheet('ngx-awesome-popup-styles').addRule(\n            '.ngx-awesome-popup-overlay',\n            `background:  ${_ProductionColorTypes[key].TransparentDarkenVariance}!important;`\n          );\n        }\n      }\n    });\n  }\n\n  public setUserColors(_UserColorTypes: IColorTypes): void {\n    if (typeof _UserColorTypes !== 'object') {\n      return;\n    }\n\n    const userKeys = Object.keys(_UserColorTypes);\n    const productionObjectKeys = Object.keys(\n      this.productionGlobalConfig.DisplayColor\n    );\n\n    userKeys.forEach(key => {\n      if (productionObjectKeys.find(tKey => tKey === key)) {\n        if (_UserColorTypes[key]) {\n          const baseColorProvider = new ColorProvider(_UserColorTypes[key]);\n          if (baseColorProvider.Base) {\n            this.productionGlobalConfig.DisplayColor[key] = baseColorProvider;\n          }\n        } else {\n          this.productionGlobalConfig.DisplayColor[key] = null;\n        }\n      }\n    });\n  }\n\n  public getSheet(_StyleID: string) {\n    // Create the <style> tag\n    let evolveDialogStyleNode = document.getElementById(\n      _StyleID\n    ) as HTMLStyleElement;\n    if (!evolveDialogStyleNode) {\n      const headNode =\n        document.head || document.getElementsByTagName('head')[0];\n      if (!headNode) {\n        return;\n      }\n\n      evolveDialogStyleNode = document.createElement('style');\n      evolveDialogStyleNode.setAttribute('id', _StyleID);\n      evolveDialogStyleNode.appendChild(document.createTextNode(''));\n      headNode.appendChild(evolveDialogStyleNode);\n    }\n\n    return evolveDialogStyleNode ? evolveDialogStyleNode.sheet : null;\n  }\n\n  private setToastStyling(_Key: string, _ColorProvider: IColorProvider) {\n    const standardToast = `.toast-wrapper.standard-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n    const standardToastStyle = `\n        background:  ${_ColorProvider.BrightShade}!important;\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n\n    const simpleToast = `.toast-wrapper.simple-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n    const simpleToastStyle = `\n        background:  ${_ColorProvider.BrightWarmly}!important;\n        color:  ${_ColorProvider.Darken}!important;\n        `;\n\n    const baseProgress = `.toast-wrapper .evolve-toast.${_Key.toLowerCase()}-dialog .progress-bar`;\n    const baseProgressStyle = `\n        background-color:  ${_ColorProvider.Brighten}!important;\n        `;\n\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      baseProgress,\n      baseProgressStyle\n    );\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      standardToast,\n      standardToastStyle\n    );\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      simpleToast,\n      simpleToastStyle\n    );\n  }\n\n  private setButtonStyling(_Key: string, _ColorProvider: IColorProvider) {\n    const baseButtonClass = `.ed-btn-${_Key.toLowerCase()}`;\n    const baseStyle = `\n        color: ${_ColorProvider.ContrastColor}!important;\n        background:  ${_ColorProvider.Base}!important;\n        border-color: ${_ColorProvider.BrightenForShade}!important;\n        `;\n\n    const hoverButtonClass = `.ed-btn-${_Key.toLowerCase()}:hover`;\n    const hoverStyle = `\n        background:  ${\n          _ColorProvider.IsBaseBright\n            ? _ColorProvider.DarkenForShade\n            : _ColorProvider.BrightenForShade\n        }!important;\n        border-color: ${\n          _ColorProvider.IsBaseBright\n            ? _ColorProvider.Darken\n            : _ColorProvider.Brighten\n        }!important;\n        `;\n\n    const focusActiveButtonClass = `.ed-btn-${_Key.toLowerCase()}:focus, .ed-btn-${_Key.toLowerCase()}:active`;\n    const focusActiveStyle = `\n        box-shadow: 0 0 1px 2px ${\n          _ColorProvider.IsBaseBright\n            ? _ColorProvider.Darken\n            : _ColorProvider.Brighten\n        }!important;\n        `;\n\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      baseButtonClass,\n      baseStyle\n    );\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      hoverButtonClass,\n      hoverStyle\n    );\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      focusActiveButtonClass,\n      focusActiveStyle\n    );\n  }\n\n  private setIconStyling(_Key: string, _ColorProvider: IColorProvider) {\n    const baseIconClass = `.ap-icon-${_Key.toLowerCase()}`;\n    const baseStyle = `color: ${_ColorProvider.BrightenForShade}!important;`;\n\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      baseIconClass,\n      baseStyle\n    );\n  }\n\n  private setDialogFrame(_Key: string, _ColorProvider: IColorProvider) {\n    const baseDialogFrameClass = `.ngx-awesome-popup-overlay .${_Key.toLowerCase()}-dialog`;\n    const baseStyle = `\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n\n    this.getSheet('ngx-awesome-popup-glob-styles').addRule(\n      baseDialogFrameClass,\n      baseStyle\n    );\n  }\n\n  private setToastStyles() {\n    this.getSheet('ngx-awesome-popup-styles').addRule(\n      `.toast-entity`,\n      `all 0.5s ease;`\n    );\n    this.getSheet('ngx-awesome-popup-styles').addRule(\n      `.toast-entity:first-child`,\n      `animation: move 0.7s ease-out;`\n    );\n\n    const isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    if (!isIEOrEdge) {\n      this.getSheet('ngx-awesome-popup-styles').addRule(\n        `@-webkit-keyframes move`,\n        `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `\n      );\n      this.getSheet('ngx-awesome-popup-styles').addRule(\n        `@keyframes move`,\n        `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `\n      );\n    }\n  }\n}\n","import { ServiceLocator } from '../locator.service';\nimport { ButtonLayoutDisplay } from './enums';\nimport { GlobalConfigService } from './global-config.service';\nimport {\n  IButton,\n  IColorObject,\n  IColorTypes,\n  IGlobalConfig,\n  IGlobalUserConfig,\n  ISizes\n} from './global-interfaces';\n\nexport class Sizes implements ISizes {\n  Width: string = null;\n  MinWidth: string = null;\n  MaxWidth: string = null;\n  Height: string = null;\n  MinHeight: string = null;\n  MaxHeight: string = null;\n  FullScreen: boolean = null;\n}\n\nexport class Dispatch {\n  Title: string = null;\n  Message: string = null;\n}\n\nexport class ButtonMaker implements IButton {\n  constructor(\n    public Label: string,\n    public ID: string,\n    public LayoutType: ButtonLayoutDisplay = ButtonLayoutDisplay.PRIMARY\n  ) {}\n}\n\nexport class GlobalUserConfig implements IGlobalUserConfig {\n  ColorList: IColorTypes = new ColorTypes();\n\n  constructor(_GlobalUserConfig: IGlobalUserConfig) {\n    if (_GlobalUserConfig) {\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(_GlobalUserConfig, this);\n      const colorList = new ColorTypes();\n      this.ColorList = dataControl.copyValuesFrom(this.ColorList, colorList);\n    }\n  }\n}\n\nexport class ColorTypes implements IColorTypes {\n  Primary: string = null;\n  Secondary: string = null;\n  Success: string = null;\n  Info: string = null;\n  Warning: string = null;\n  Danger: string = null;\n  Light: string = null;\n  Dark: string = null;\n}\n\nexport class ResetGlobalConfig {\n  constructor(globalConfig?: IGlobalUserConfig) {\n    const globalConfigService: GlobalConfigService = ServiceLocator.injector.get(\n      GlobalConfigService\n    );\n    if (globalConfig) {\n      globalConfigService.setUserColors(globalConfig.ColorList);\n      globalConfigService.setNodeStyles(\n        globalConfigService.productionGlobalConfig.DisplayColor,\n        true\n      );\n    } else {\n      globalConfigService.resetStyles();\n    }\n  }\n}\n\nexport class GlobalConfig implements IGlobalConfig {\n  DisplayColor: IColorObject = new DisplayColor();\n}\n\nexport class DisplayColor implements IColorObject {\n  Primary: ColorProvider = null;\n  Secondary: ColorProvider = null;\n  Success: ColorProvider = null;\n  Info: ColorProvider = null;\n  Warning: ColorProvider = null;\n  Danger: ColorProvider = null;\n  Light: ColorProvider = null;\n  Dark: ColorProvider = null;\n}\n\nexport class ColorProvider {\n  Base: string = null;\n  Brighten: string = null;\n  BrightenForShade: string = null;\n  Darken: string = null;\n  DarkenForShade: string = null;\n  ContrastColor: string = null;\n  TransparentDarkenVariance: string = null;\n  BrightShade: string = null;\n  BrightWarmly: string = null;\n  IsBaseBright: boolean = null;\n\n  constructor(_Color: string) {\n    if ((this.Base = this.isColor(_Color))) {\n      this.Brighten = this.brightness(this.Base, 'brighten', 25);\n      this.BrightenForShade = this.brightness(this.Base, 'brighten', 10);\n      this.Darken = this.brightness(this.Base, 'darken', 20);\n      this.DarkenForShade = this.brightness(this.Base, 'darken', 10);\n      const luminance = Math.floor(this.luminance(this.Base) * 100);\n      const darken =\n        luminance > 50\n          ? 5\n          : luminance > 40\n          ? 10\n          : luminance > 20\n          ? 15\n          : luminance;\n      const brighten =\n        luminance > 55\n          ? 65\n          : luminance > 45\n          ? 60\n          : luminance > 20\n          ? 55\n          : luminance > 10\n          ? 45\n          : 80;\n      this.BrightShade = this.brightness(\n        this.brightness(this.Base, 'darken', darken),\n        'brighten',\n        brighten\n      );\n      this.BrightWarmly = this.brightness(\n        this.brightness(this.saturate(this.Base), 'darken', darken - 10),\n        'brighten',\n        brighten - 5\n      );\n      this.TransparentDarkenVariance = this.brightness(\n        this.transparentize(this.Base, 80),\n        'darken',\n        40\n      );\n      if (this.isBright(this.Base)) {\n        this.ContrastColor = 'rgba(58,65,71,0.5)';\n        this.IsBaseBright = true;\n      } else {\n        this.ContrastColor = 'rgb(255,255,255, 0.7)';\n        this.IsBaseBright = false;\n      }\n\n      /*\t       console.log('%c BrightShade ', `background: ${this.BrightShade}; color: ${this.ContrastColor}`, this.BrightShade);\n\t\t\t\t\t       console.log('%c BrightWarmly ', `background: ${this.BrightWarmly}; color: ${this.ContrastColor}`, this.BrightWarmly);\n\t\t\t\t\t\t   console.log('%c Brighten ', `background: ${this.Brighten}; color: ${this.ContrastColor}`, this.Brighten);\n\t\t\t\t\t\t   console.log('%c BrightenForShade ', `background: ${this.BrightenForShade}; color: ${this.ContrastColor}`, this.BrightenForShade);\n\t\t\t\t\t       console.log('%c Base ', `background: ${this.Base}; color: ${this.ContrastColor}`, this.Base);\n\t\t\t\t\t       console.log('%c DarkenForShade ', `background: ${this.DarkenForShade}; color: ${this.ContrastColor}`, this.DarkenForShade);\n\t\t\t\t\t       console.log('%c Darken ', `background: ${this.Darken}; color: ${this.ContrastColor}`, this.Darken);\n\t\t\t\t\t\t   console.log('%c TransparentDarkenVariance ', `background: ${this.TransparentDarkenVariance}; color: ${this.ContrastColor}`, this.TransparentDarkenVariance);\n\t\t\t*/\n    }\n  }\n\n  saturate(_Rgb: string) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const greyVal = this.getLightnessOfRGB(_Rgb) * 55;\n    const [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n    if (lowest.val === highest.val) {\n      return _Rgb;\n    }\n\n    const saturationRange = Math.round(Math.min(255 - greyVal, greyVal));\n    const maxChange = Math.min(255 - highest.val, lowest.val);\n    const changeAmount = Math.min(saturationRange / 10, maxChange);\n    const middleValueRatio =\n      (greyVal - middle.val) / (greyVal - highest.val) + 0.07;\n\n    const returnArray = [];\n    returnArray[highest.index] = Math.round(highest.val + changeAmount);\n    returnArray[lowest.index] = Math.round(lowest.val - changeAmount);\n    returnArray[middle.index] = Math.round(\n      greyVal + (returnArray[highest.index] - greyVal) * middleValueRatio + 5\n    );\n    return `rgb(${[returnArray].join()})`;\n  }\n\n  public brightness(\n    _Rgb: string,\n    _Action: 'brighten' | 'darken',\n    _Percentage: number\n  ): string {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n    if (_Action === 'brighten' && lowest.val === 255) {\n      return _Rgb;\n    }\n\n    if (_Action === 'darken' && highest.val === 0) {\n      return _Rgb;\n    }\n\n    const amount = (_Percentage / 100) * 255;\n\n    let returnList = [];\n\n    if (_Action === 'brighten') {\n      returnList[lowest.index] = Math.round(\n        lowest.val + Math.min(255 - lowest.val, amount)\n      );\n      const increaseFraction =\n        (returnList[lowest.index] - lowest.val) / (255 - lowest.val);\n      returnList[middle.index] =\n        middle.val + (255 - middle.val) * increaseFraction;\n      returnList[highest.index] =\n        highest.val + (255 - highest.val) * increaseFraction;\n    }\n    if (_Action === 'darken') {\n      returnList[highest.index] = highest.val - Math.min(highest.val, amount);\n      const decreaseFraction =\n        (highest.val - returnList[highest.index]) / highest.val;\n      returnList[middle.index] = middle.val - middle.val * decreaseFraction;\n      returnList[lowest.index] = lowest.val - lowest.val * decreaseFraction;\n    }\n\n    returnList = returnList.map(item => Math.round(item));\n    if (rgbIntArray.length > 3) {\n      returnList.push(rgbIntArray[3]);\n      return `rgba(${returnList.join()})`;\n    }\n    return `rgb(${returnList.join()})`;\n  }\n\n  getLightnessOfRGB(_Rgb: string) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n\n    const highest = Math.max(...rgbIntArray);\n    const lowest = Math.min(...rgbIntArray);\n    return (highest + lowest) / 2 / 255;\n  }\n\n  private isBright(_Rgb: string) {\n    return this.contrast(this.luminance(_Rgb));\n  }\n\n  private getLowMidHi(_RgbArray: number[]) {\n    const rgbArrayCopy = _RgbArray.slice();\n    const rgbArrayWithoutAlpha =\n      _RgbArray.length > 3\n        ? rgbArrayCopy.reverse().slice(1).reverse()\n        : _RgbArray;\n    let highest = { val: -1, index: -1 };\n    let lowest = { val: Infinity, index: -1 };\n\n    rgbArrayWithoutAlpha.map((val, index) => {\n      if (val > highest.val) {\n        highest = { val: val, index: index };\n      }\n      if (val < lowest.val) {\n        lowest = { val: val, index: index };\n      }\n    });\n\n    if (lowest.index === highest.index) {\n      lowest.index = highest.index + 1;\n    }\n\n    const middleIndex = 3 - highest.index - lowest.index;\n    let middle = {\n      val: rgbArrayWithoutAlpha[middleIndex],\n      index: middleIndex\n    };\n    return [lowest, middle, highest];\n  }\n\n  private contrast(_Luminance) {\n    const brightest = Math.max(1.05, _Luminance + 0.05);\n    const darkest = Math.min(1.05, _Luminance + 0.05);\n    const contrast = brightest / darkest;\n    return contrast < 2.7;\n  }\n\n  private isColor(_StrColor) {\n    const CSSDeclaration = new Option().style;\n    CSSDeclaration.color = _StrColor;\n    return !!CSSDeclaration.color ? CSSDeclaration.color : null;\n  }\n\n  private getRGBArray(_Rgb: string): number[] {\n    return _Rgb\n      .replace(/^(rgb|rgba)\\(/, '')\n      .replace(/\\)$/, '')\n      .replace(/\\s/g, '')\n      .split(',')\n      .map(x => +x);\n  }\n\n  private luminance(_Rgb: string) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const W3algorithm = rgbIntArray.map(item => {\n      item /= 255;\n      return item <= 0.03928\n        ? item / 12.92\n        : Math.pow((item + 0.055) / 1.055, 2.4);\n    });\n    return (\n      W3algorithm[0] * 0.2126 +\n      W3algorithm[1] * 0.7152 +\n      W3algorithm[2] * 0.0722\n    );\n  }\n\n  private transparentize(_Rgb: string, _Percentage: number) {\n    const baseArray = this.Base.replace(/^(rgb|rgba)\\(/, '')\n      .replace(/\\)$/, '')\n      .replace(/\\s/g, '')\n      .split(',')\n      .map(x => +x);\n    if (baseArray.length > 3) {\n      baseArray.pop();\n    }\n    const amount = (100 - _Percentage) / 100;\n    baseArray.push(amount);\n    return `rgb(${baseArray.join()})`;\n  }\n}\n\nexport class DataControl {\n  /**\n   * @ignore\n   */\n  public copyValuesFrom(_Data: any, _DestinationObject: any): any {\n    if (typeof _Data !== 'object') {\n      return _DestinationObject;\n    }\n\n    const dataKeys = Object.keys(_Data);\n    const destinationObjectKeys = Object.keys(_DestinationObject);\n\n    dataKeys.forEach(key => {\n      if (\n        destinationObjectKeys.find(tKey => tKey === key || tKey === '_' + key)\n      ) {\n        if (key.includes('Date')) {\n          const date = Date.parse(_Data[key]);\n          if (date) {\n            _DestinationObject[key] = new Date(date);\n          } else {\n            if (_Data[key] !== null) {\n              _DestinationObject[key] = _Data[key];\n            }\n          }\n        } else {\n          if (_Data[key] !== null) {\n            _DestinationObject[key] = _Data[key];\n          }\n        }\n      }\n    });\n\n    return _DestinationObject;\n  }\n}\n\nexport class Timer {\n  TimePassed: number = 0;\n  Timer: any;\n  Progress: number = 0;\n  Remaining: number = 100;\n  Milliseconds: number;\n\n  constructor() {}\n\n  setMilliseconds(_Milliseconds: number) {\n    this.Milliseconds = _Milliseconds;\n  }\n\n  reset(): void {\n    this.TimePassed = 0;\n    this.Progress = 0;\n  }\n\n  pause(): void {\n    this.TimePassed = 0;\n    this.Progress = 0;\n  }\n\n  stop(): void {\n    this.TimePassed = 0;\n    clearInterval(this.Timer);\n  }\n\n  start(): void {\n    this.Timer = setInterval(() => {\n      if (this.TimePassed >= this.Milliseconds) {\n        clearInterval(this.Timer);\n        return;\n      }\n      this.TimePassed += 100;\n      this.Progress = (this.TimePassed * 100) / this.Milliseconds;\n      this.Remaining = 100 - this.Progress;\n    }, 100);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DialogLayoutDisplay } from '../../../core/enums';\nimport { DataControl } from '../../../core/global-classes';\nimport { ConfirmBoxSettings } from './classes';\nimport { IConfirmBoxUserConfig } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmBoxConfigService {\n  authorConfig: IConfirmBoxUserConfig = new ConfirmBoxSettings();\n  productionConfig: IConfirmBoxUserConfig = new ConfirmBoxSettings();\n\n  constructor(\n    @Inject('confirmBoxConfig')\n    private userConfig: IConfirmBoxUserConfig = {}\n  ) {\n    // region *** confirmBox userConfig (user input app-module) ***\n    const userConfigBase = new ConfirmBoxSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      userConfig.ConfirmBoxCoreConfig,\n      userConfigBase.ConfirmBoxCoreConfig\n    ); // this will make sure that object has right properties\n    userConfig.ConfirmBoxCoreConfig = userConfigBase.ConfirmBoxCoreConfig;\n    // endregion\n\n    // region *** author default config values (if there is no user input) ***\n    this.authorConfig.ConfirmBoxCoreConfig.Width = 'auto';\n    this.authorConfig.ConfirmBoxCoreConfig.Height = 'auto';\n    this.authorConfig.ConfirmBoxCoreConfig.ButtonPosition = 'center';\n    this.authorConfig.ConfirmBoxCoreConfig.ConfirmLabel = 'Confirm';\n    this.authorConfig.ConfirmBoxCoreConfig.DeclineLabel = 'Decline';\n    this.authorConfig.ConfirmBoxCoreConfig.DisableIcon = false;\n    this.authorConfig.ConfirmBoxCoreConfig.AllowHTMLMessage = false;\n    this.authorConfig.ConfirmBoxCoreConfig.LayoutType =\n      DialogLayoutDisplay.NONE;\n\n    // endregion\n\n    // region *** Production setup ***\n    dataControl.copyValuesFrom(\n      this.authorConfig.ConfirmBoxCoreConfig,\n      this.productionConfig.ConfirmBoxCoreConfig\n    );\n    dataControl.copyValuesFrom(\n      userConfig.ConfirmBoxCoreConfig,\n      this.productionConfig.ConfirmBoxCoreConfig\n    );\n    // endregion\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class DialogInjector implements Injector {\n  constructor(\n    private ParentInjector: Injector,\n    private AdditionalTokens: WeakMap<any, any>\n  ) {}\n\n  get<T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags\n  ): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags?: any): any {\n    const value = this.AdditionalTokens.get(token);\n\n    if (value) {\n      return value;\n    }\n\n    return this.ParentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from \"@angular/animations\";\n\nexport function fadeInOut(_OpacityMin = 0, _OpacityMax = 1) {\n  return trigger(\"fadeInOut\", [\n    // ...\n    state(\n      \"open\",\n      style({\n        opacity: _OpacityMax,\n      })\n    ),\n    state(\n      \"closed\",\n      style({\n        opacity: _OpacityMin,\n      })\n    ),\n    transition(\"* => close-fast\", [animate(\"0.1s\")]),\n    transition(\"* => open\", [animate(\"0.2s\")]),\n    transition(\"* => close-slow\", [animate(\"1.3s\")]),\n    transition(\"* => close-instant\", [animate(\"0s\")]),\n  ]);\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Inject\n} from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { fadeInOut } from '../../../core/animations';\nimport { IButton } from '../../../core/global-interfaces';\nimport {\n  ConfirmBoxBelonging,\n  ConfirmBoxDefaultResponse\n} from '../core/classes';\n\n@Component({\n  selector: 'app-confirm-box-wrapper',\n  templateUrl: './confirm-box-wrapper.component.html',\n  styleUrls: ['./confirm-box-wrapper.component.scss'],\n  animations: [fadeInOut(0, 1)]\n})\nexport class ConfirmBoxWrapperComponent implements AfterViewInit {\n  fadeInOutAnimation: string = 'open';\n\n  constructor(\n    @Inject('confirmBoxBelonging')\n    public confirmBoxBelonging: ConfirmBoxBelonging,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.setResponse(false);\n    this.cd.detectChanges();\n  }\n\n  setResponse(_IsSuccess: boolean, _ClickedButtonID?: string): void {\n    const response = new ConfirmBoxDefaultResponse();\n    if (_ClickedButtonID) {\n      response.ClickedButtonID = _ClickedButtonID;\n    }\n\n    response.setSuccess(_IsSuccess);\n    response.setBelonging(this.confirmBoxBelonging);\n    this.confirmBoxBelonging.EventsController.setDefaultResponse(response);\n  }\n\n  onOverlayClicked(evt: MouseEvent): void {\n    // console.log('onOverlayClicked');\n  }\n\n  onCustomButton(_Button: IButton): void {\n    this.confirmBoxBelonging.EventsController.onButtonClick(_Button);\n    this.setResponse(true, _Button.ID);\n    this.confirmBoxBelonging.EventsController.close();\n  }\n\n  onButtonClick(_Type: 'confirm' | 'decline') {\n    let buttonID;\n    if (_Type === 'confirm') {\n      buttonID = this.confirmBoxBelonging.ConfirmBoxCoreConfig.ConfirmLabel.toLowerCase();\n    } else if (_Type === 'decline') {\n      buttonID = this.confirmBoxBelonging.ConfirmBoxCoreConfig.DeclineLabel.toLowerCase();\n    }\n\n    this.setResponse(_Type === 'confirm', buttonID);\n\n    this.confirmBoxBelonging.EventsController.close();\n  }\n\n  closeParent$(_ClosingAnimation: string): Observable<any> {\n    this.fadeInOutAnimation = _ClosingAnimation;\n    const timer = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n\n    return new Observable((observer: Observer<any>) => {\n      observer.next('');\n      observer.complete();\n    }).pipe(delay(timer));\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector\n} from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { DialogInjector } from '../../../core/dialog-injector';\nimport { ConfirmBoxWrapperComponent } from '../confirm-box-wrapper/confirm-box-wrapper.component';\nimport { ConfirmBoxBelonging, ConfirmBoxEventsController } from './classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmBoxService {\n  confirmBoxComponentRefList: ComponentRef<ConfirmBoxWrapperComponent>[] = [];\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef\n  ) {}\n\n  open(_ConfirmBoxBelonging: ConfirmBoxBelonging): ConfirmBoxEventsController {\n    const dialogController = _ConfirmBoxBelonging.EventsController;\n    const componentRef = this.getComponentRef(\n      dialogController,\n      _ConfirmBoxBelonging\n    );\n\n    this.confirmBoxComponentRefList.push(componentRef);\n    componentRef.instance.confirmBoxBelonging = _ConfirmBoxBelonging;\n\n    this.appendToBodyParentComponent(componentRef);\n\n    this.listeners(dialogController);\n\n    return dialogController;\n  }\n\n  getComponentRef(\n    _EventsController: ConfirmBoxEventsController,\n    _ConfirmBoxBelonging: ConfirmBoxBelonging\n  ): ComponentRef<any> | null {\n    let componentFactory;\n\n    const dialogIndex = this.findDialogIndex(\n      _ConfirmBoxBelonging.EntityUniqueID\n    );\n    if (dialogIndex === -1) {\n      const weakMap = new WeakMap();\n      weakMap.set(ConfirmBoxEventsController, _EventsController);\n\n      componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        ConfirmBoxWrapperComponent\n      );\n      return componentFactory.create(\n        new DialogInjector(this.injector, weakMap)\n      );\n    }\n\n    return null;\n  }\n\n  listeners(_EventsController: ConfirmBoxEventsController) {\n    // Listener for closing dialog\n    const closeDialogSubscription = _EventsController.afterClosed$.subscribe(\n      response => {\n        const modalIndex = this.findDialogIndex(\n          response.confirmBoxBelonging.EntityUniqueID\n        );\n        this.removeFromBodyParentComponent(modalIndex);\n        closeDialogSubscription.unsubscribe();\n      }\n    );\n  }\n\n  appendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n    // attach view to ignite lifecycle hooks\n    this.appRef.attachView(_ComponentRef.hostView);\n\n    // DOM\n    const domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n  }\n\n  closeDialogWrapperComponent(_DialogUniqueID: string) {\n    const modalIndex = this.findDialogIndex(_DialogUniqueID);\n    this.removeFromBodyParentComponent(modalIndex);\n  }\n\n  removeFromBodyParentComponent(_DialogIndex: number): void {\n    if (_DialogIndex > -1) {\n      this.confirmBoxComponentRefList[_DialogIndex].instance\n        .closeParent$('close-fast')\n        .pipe(\n          map(item => {\n            this.appRef.detachView(\n              this.confirmBoxComponentRefList[_DialogIndex].hostView\n            );\n            this.confirmBoxComponentRefList[_DialogIndex].destroy();\n            this.confirmBoxComponentRefList.splice(_DialogIndex, 1);\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  findDialogIndex(_DialogUniqueID: string): number {\n    return this.confirmBoxComponentRefList.findIndex(item => {\n      return (\n        _DialogUniqueID === item.instance.confirmBoxBelonging.EntityUniqueID\n      );\n    });\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DialogLayoutDisplay, VerticalPosition } from '../../../core/enums';\nimport { DataControl, Dispatch } from '../../../core/global-classes';\nimport { IButton, IDispatch } from '../../../core/global-interfaces';\nimport { ServiceLocator } from '../../../locator.service';\nimport { ConfirmBoxConfigService } from './confirm-box-config.service';\nimport { ConfirmBoxService } from './confirm-box-service';\nimport {\n  IConfirmBoxBelonging,\n  IConfirmBoxCoreConfig,\n  IConfirmBoxPublicResponse,\n  IConfirmBoxResponse,\n  IPrivateResponseMerged\n} from './interfaces';\n\nexport class ConfirmBoxInitializer {\n  /** @internal */\n  private confirmBoxCarrier: ConfirmBoxCarrier = new ConfirmBoxCarrier();\n\n  constructor() {}\n\n  openConfirmBox$(): Observable<IConfirmBoxPublicResponse> {\n    return this.confirmBoxCarrier.openConfirmBox$().pipe(\n      map(resp => {\n        const basicConfirmBoxResponse = new ConfirmBoxResponse();\n        const dataControl = new DataControl();\n        dataControl.copyValuesFrom(resp, basicConfirmBoxResponse);\n        return basicConfirmBoxResponse;\n      }),\n      take(1)\n    );\n  }\n\n  setButtons(_Buttons: IButton[]): void {\n    this.confirmBoxCarrier.setButtons(_Buttons);\n  }\n\n  setConfig(_ConfirmBoxCoreConfig: IConfirmBoxCoreConfig) {\n    this.confirmBoxCarrier.setConfig(_ConfirmBoxCoreConfig);\n  }\n\n  setDispatch(_Title: string, _Message: string = null): void {\n    this.confirmBoxCarrier.setTitle(_Title);\n    this.confirmBoxCarrier.setMessage(_Message);\n  }\n\n  setTitle(_Title: string): void {\n    this.confirmBoxCarrier.setTitle(_Title);\n  }\n\n  setMessage(_Message: string): void {\n    this.confirmBoxCarrier.setMessage(_Message);\n  }\n\n  setButtonLabels(_Confirm: string, _Decline?: string): void {\n    this.confirmBoxCarrier.setButtonLabels(_Confirm, _Decline);\n  }\n}\n\nexport class ConfirmBoxResponse\n  extends DataControl\n  implements IConfirmBoxResponse, IConfirmBoxPublicResponse {\n  // private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n  Success: boolean = null;\n  ClickedButtonID: string = null;\n\n  constructor() {\n    super();\n  }\n\n  setSuccess(_IsSuccess: boolean): void {\n    this.Success = _IsSuccess;\n  }\n\n  setClickedButtonID(_ClickedButtonID): void {\n    this.ClickedButtonID = _ClickedButtonID;\n  }\n}\n\nexport class ConfirmBoxEventsController {\n  defaultResponse: IPrivateResponseMerged;\n\n  private readonly _afterClosed: Subject<IPrivateResponseMerged> = new Subject<IPrivateResponseMerged>();\n  afterClosed$: Observable<IPrivateResponseMerged> = this._afterClosed.asObservable();\n\n  private readonly _onButtonClick: Subject<IButton> = new Subject<IButton>();\n  onButtonClick$: Observable<IButton> = this._onButtonClick.asObservable();\n  private readonly _buttonList: Subject<IButton[]> = new Subject<IButton[]>();\n  buttonList$: Observable<IButton[]> = this._buttonList.asObservable();\n\n  constructor(private EntityUniqueID: string) {}\n\n  close(_Response?: IPrivateResponseMerged): void {\n    const response = _Response ? _Response : this.defaultResponse;\n    this._afterClosed.next(response);\n  }\n\n  onButtonClick(_Button: IButton): void {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList: IButton[]): void {\n    this._buttonList.next(_ButtonList);\n  }\n\n  setDefaultResponse(_Response: IPrivateResponseMerged): void {\n    this.defaultResponse = _Response;\n  }\n}\n\n// endregion\n\nexport class ConfirmBoxDefaultResponse\n  extends ConfirmBoxResponse\n  implements IPrivateResponseMerged {\n  confirmBoxBelonging: ConfirmBoxBelonging = null;\n\n  constructor() {\n    super();\n  }\n\n  setBelonging(_ConfirmBoxBelonging): void {\n    this.confirmBoxBelonging = _ConfirmBoxBelonging;\n  }\n}\n\nexport class ConfirmBoxCarrier {\n  confirmBoxBelonging: ConfirmBoxBelonging = new ConfirmBoxBelonging();\n\n  constructor() {}\n\n  setButtons(_Buttons: IButton[]) {\n    if (_Buttons.length) {\n      this.confirmBoxBelonging.Buttons = _Buttons;\n    }\n  }\n\n  setTitle(_Title: string): void {\n    this.confirmBoxBelonging.Dispatch.Title = _Title;\n  }\n\n  setMessage(_Message: string): void {\n    this.confirmBoxBelonging.Dispatch.Message = _Message;\n  }\n\n  setButtonLabels(_Confirm: string, _Decline: string): void {\n    this.confirmBoxBelonging.ConfirmBoxCoreConfig.ConfirmLabel = _Confirm;\n    this.confirmBoxBelonging.ConfirmBoxCoreConfig.DeclineLabel = _Decline;\n  }\n\n  setConfig(_ConfirmBoxBelonging: IConfirmBoxCoreConfig) {\n    // region *** local UserConfig (defined on place where dialog is called) ***\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      _ConfirmBoxBelonging,\n      this.confirmBoxBelonging.ConfirmBoxCoreConfig\n    );\n    // endregion\n  }\n\n  openConfirmBox$(): Observable<IPrivateResponseMerged> {\n    const service: ConfirmBoxService = ServiceLocator.injector.get(\n      ConfirmBoxService\n    );\n    const confirmBoxController = service.open(this.confirmBoxBelonging);\n    return confirmBoxController.afterClosed$;\n  }\n}\n\nexport class ConfirmBoxSettings {\n  Buttons: IButton[] = [];\n  ConfirmBoxCoreConfig: IConfirmBoxCoreConfig = new ConfirmBoxCoreConfig();\n  Dispatch: IDispatch = new Dispatch();\n}\n\nexport class ConfirmBoxCoreConfig implements IConfirmBoxCoreConfig {\n  Width: string = null;\n  Height: string = null;\n  ButtonPosition: VerticalPosition = null;\n  LayoutType: DialogLayoutDisplay = null;\n  Dispatch: IDispatch = null;\n  ConfirmLabel: string = null;\n  DeclineLabel: string = null;\n  DisableIcon: boolean = null;\n  AllowHTMLMessage: boolean = null;\n}\n\nexport class ConfirmBoxBelonging\n  extends ConfirmBoxSettings\n  implements IConfirmBoxBelonging {\n  EntityUniqueID: string = 'C' + Math.random().toString(36).substr(2, 9);\n  EventsController: ConfirmBoxEventsController;\n\n  constructor() {\n    super();\n    this.EventsController = new ConfirmBoxEventsController(this.EntityUniqueID);\n    const ConfirmBoxCoreConfigurator: ConfirmBoxConfigService = ServiceLocator.injector.get(\n      ConfirmBoxConfigService\n    );\n    const baseSettings = new ConfirmBoxSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      ConfirmBoxCoreConfigurator.productionConfig.ConfirmBoxCoreConfig,\n      baseSettings.ConfirmBoxCoreConfig\n    );\n    this.ConfirmBoxCoreConfig = baseSettings.ConfirmBoxCoreConfig;\n    this.Buttons = ConfirmBoxCoreConfigurator.productionConfig.Buttons.slice();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"ed-default-loader\",\n  templateUrl: \"./default-loader.component.html\",\n  styleUrls: [\"./default-loader.component.scss\"],\n})\nexport class DefaultLoaderComponent {}\n","import { Inject, Injectable } from '@angular/core';\nimport { DialogLayoutDisplay } from '../../../core/enums';\nimport { DataControl } from '../../../core/global-classes';\nimport { DefaultLoaderComponent } from '../../../default-loader/default-loader.component';\nimport { DialogSettings } from './classes';\nimport { IDialogUserConfig } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogConfigService {\n  authorConfig: IDialogUserConfig = new DialogSettings();\n  productionConfig: IDialogUserConfig = new DialogSettings();\n\n  constructor(\n    @Inject('dialogConfig')\n    private userConfig: IDialogUserConfig = {}\n  ) {\n    // region *** dialog userConfig (user input app-module) ***\n    const userConfigBase = new DialogSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      userConfig.DialogCoreConfig,\n      userConfigBase.DialogCoreConfig\n    ); // this will make sure that object has right properties\n    userConfig.DialogCoreConfig = userConfigBase.DialogCoreConfig;\n\n    if (userConfig.DialogCoreConfig.LoaderComponent !== null) {\n      userConfig.DialogCoreConfig.DisplayLoader =\n        userConfig.DialogCoreConfig.DisplayLoader === null;\n    }\n    // endregion\n\n    // region *** author default config values (if there is no user input) ***\n    this.authorConfig.DialogCoreConfig.Width = 'auto';\n    this.authorConfig.DialogCoreConfig.Height = 'auto';\n    this.authorConfig.DialogCoreConfig.HideScrollbar = false;\n    this.authorConfig.DialogCoreConfig.EscapeKeyClose = false;\n    this.authorConfig.DialogCoreConfig.ButtonPosition = 'right';\n    this.authorConfig.DialogCoreConfig.DisplayLoader = false;\n    this.authorConfig.DialogCoreConfig.LayoutType = DialogLayoutDisplay.NONE;\n    this.authorConfig.DialogCoreConfig.LoaderComponent = DefaultLoaderComponent;\n    // endregion\n\n    dataControl.copyValuesFrom(\n      this.authorConfig.DialogCoreConfig,\n      this.productionConfig.DialogCoreConfig\n    );\n    dataControl.copyValuesFrom(\n      userConfig.DialogCoreConfig,\n      this.productionConfig.DialogCoreConfig\n    );\n\n    // Buttons\n    /*if(userConfig.Buttons){\n\t\t\tthis.config.Buttons.push(\n\t\t\t\tnew ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY)\n\t\t\t\t,new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n\t\t\t);\n\t\t}*/\n  }\n}\n","import { Directive, ViewContainerRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInsertionLoader]\",\n})\nexport class InsertionLoaderDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Directive, ViewContainerRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInsertion]\",\n})\nexport class InsertionDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  HostListener,\n  Inject,\n  OnDestroy,\n  Type,\n  ViewChild\n} from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { fadeInOut } from '../../../core/animations';\nimport { InsertionLoaderDirective } from '../../../core/insertion-loader.directive';\nimport { InsertionDirective } from '../../../core/insertion.directive';\nimport { DialogBelonging, DialogDefaultResponse } from '../core/classes';\n\n@Component({\n  selector: 'dialog-popup-wrapper',\n  templateUrl: './dialog-wrapper.component.html',\n  styleUrls: ['./dialog-wrapper.component.scss'],\n  animations: [fadeInOut(0, 1)]\n})\nexport class DialogWrapperComponent implements AfterViewInit, OnDestroy {\n  fadeInOutAnimation: string = 'open';\n  showLoader: boolean = true;\n  bodyOverflow: string;\n\n  childComponentRef: ComponentRef<any>;\n  childComponentType: Type<any>;\n  loaderComponentRef: ComponentRef<any>;\n\n  @ViewChild(InsertionDirective, { static: true })\n  insertionPoint: InsertionDirective;\n  @ViewChild(InsertionLoaderDirective, { static: true })\n  loaderInsertionPoint: InsertionLoaderDirective;\n\n  constructor(\n    @Inject('dialogBelonging')\n    public dialogBelonging: DialogBelonging,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.hideScrollbar(); // hide scrollbar if config enabled\n\n    this.loadChildComponent(this.childComponentType);\n    this.loadLoaderComponent(\n      this.dialogBelonging.DialogCoreConfig.LoaderComponent\n    );\n    this.setDefaultResponse();\n    this.cd.detectChanges();\n  }\n\n  hideScrollbar() {\n    if (this.dialogBelonging.DialogCoreConfig.HideScrollbar) {\n      this.bodyOverflow = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  revertScrollbarSettings() {\n    if (this.dialogBelonging.DialogCoreConfig.HideScrollbar) {\n      document.body.style.overflow = this.bodyOverflow;\n    }\n  }\n\n  setDefaultResponse(): void {\n    const dialogResponse = new DialogDefaultResponse();\n    dialogResponse.setBelonging(this.dialogBelonging);\n    this.dialogBelonging.EventsController.setDefaultResponse(dialogResponse);\n  }\n\n  ngOnDestroy(): void {\n    this.revertScrollbarSettings();\n\n    if (this.childComponentRef) {\n      this.childComponentRef.destroy();\n    }\n    if (this.loaderComponentRef) {\n      this.loaderComponentRef.destroy();\n    }\n  }\n\n  hideScroller() {}\n\n  loadChildComponent(_ComponentType: Type<any>): void {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      _ComponentType\n    );\n\n    console.log(this.insertionPoint);\n    const viewContainerRef = this.insertionPoint.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.childComponentRef = viewContainerRef.createComponent(componentFactory);\n\n    this.childComponentRef.instance.dialogBelonging = this.dialogBelonging;\n  }\n\n  loadLoaderComponent(_LoaderRef: Type<any>): void {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      _LoaderRef\n    );\n    const viewContainerRef = this.loaderInsertionPoint.viewContainerRef;\n    viewContainerRef.clear();\n\n    this.loaderComponentRef = viewContainerRef.createComponent(\n      componentFactory\n    );\n  }\n\n  close() {\n    this.dialogBelonging.EventsController.close();\n  }\n\n  closeParent$(_ClosingAnimation: string): Observable<any> {\n    this.fadeInOutAnimation = _ClosingAnimation;\n    const timer = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n\n    return new Observable((observer: Observer<any>) => {\n      observer.next('');\n      observer.complete();\n    }).pipe(delay(timer));\n  }\n\n  onOverlayClicked(evt: MouseEvent): void {\n    // console.log('onOverlayClicked');\n  }\n\n  onCustomButton(_Button: any): void {\n    this.dialogBelonging.EventsController.onButtonClick(_Button);\n  }\n\n  closeLoader(): void {\n    this.showLoader = false;\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type\n} from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { DialogInjector } from '../../../core/dialog-injector';\nimport { DialogWrapperComponent } from '../dialog-wrapper/dialog-wrapper.component';\nimport { DialogBelonging, DialogEventsController } from './classes';\nimport { IDialogEventsController } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n  dialogParentComponentRefList: ComponentRef<any>[] = [];\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef\n  ) {}\n\n  open(\n    _ComponentType: Type<any>,\n    _DialogBelonging: DialogBelonging\n  ): IDialogEventsController {\n    const dialogController = _DialogBelonging.EventsController;\n    const componentRef = this.getComponentRef(\n      dialogController,\n      _DialogBelonging\n    );\n\n    this.dialogParentComponentRefList.push(componentRef);\n    componentRef.instance.dialogBelonging = _DialogBelonging;\n    componentRef.instance.childComponentType = _ComponentType;\n\n    this.appendToBodyParentComponent(componentRef);\n\n    this.listeners(dialogController);\n\n    return dialogController;\n  }\n\n  getComponentRef(\n    _EventsController: IDialogEventsController,\n    _DialogBelonging: DialogBelonging\n  ): ComponentRef<any> | null {\n    let componentFactory;\n\n    const dialogIndex = this.findDialogIndex(_DialogBelonging.EntityUniqueID);\n    if (dialogIndex === -1) {\n      const weakMap = new WeakMap();\n      weakMap.set(DialogEventsController, _EventsController);\n\n      componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        DialogWrapperComponent\n      );\n      return componentFactory.create(\n        new DialogInjector(this.injector, weakMap)\n      );\n    }\n\n    return null;\n  }\n\n  listeners(_EventsController: IDialogEventsController) {\n    // Listener for closing dialog\n    const closeDialogSubscription = _EventsController.afterClosed$.subscribe(\n      response => {\n        const modalIndex = this.findDialogIndex(\n          response.DialogBelonging.EntityUniqueID\n        );\n        this.removeFromBodyDialogWrapperComponent(modalIndex);\n        closeDialogSubscription.unsubscribe();\n      }\n    );\n\n    // Listener for turning off loader\n    const closeLoaderSubscription = _EventsController.afterLoader$.subscribe(\n      (_DialogUniqueID: string) => {\n        if (_DialogUniqueID) {\n          const modalIndex = this.findDialogIndex(_DialogUniqueID);\n          if (modalIndex !== -1) {\n            this.dialogParentComponentRefList[\n              modalIndex\n            ].instance.closeLoader();\n          }\n        }\n\n        closeLoaderSubscription.unsubscribe();\n      }\n    );\n  }\n\n  childComponentResolver() {}\n\n  appendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n    // attach view to ignite lifecycle hooks\n    this.appRef.attachView(_ComponentRef.hostView);\n\n    // DOM\n    const domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n  }\n\n  closeDialogWrapperComponent(_DialogUniqueID: string) {\n    const modalIndex = this.findDialogIndex(_DialogUniqueID);\n    this.removeFromBodyDialogWrapperComponent(modalIndex);\n  }\n\n  removeFromBodyDialogWrapperComponent(_DialogIndex: number): void {\n    if (_DialogIndex > -1) {\n      this.dialogParentComponentRefList[_DialogIndex].instance\n        .closeParent$('close-fast')\n        .pipe(\n          map(item => {\n            this.appRef.detachView(\n              this.dialogParentComponentRefList[_DialogIndex].hostView\n            );\n            this.dialogParentComponentRefList[_DialogIndex].destroy();\n            this.dialogParentComponentRefList.splice(_DialogIndex, 1);\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  findDialogIndex(_DialogUniqueID: string): number {\n    return this.dialogParentComponentRefList.findIndex(item => {\n      return _DialogUniqueID === item.instance.dialogBelonging.EntityUniqueID;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DialogLayoutDisplay, VerticalPosition } from '../../../core/enums';\nimport { DataControl, Sizes } from '../../../core/global-classes';\nimport { IButton } from '../../../core/global-interfaces';\nimport { ServiceLocator } from '../../../locator.service';\nimport { DialogConfigService } from './dialog-config.service';\nimport { DialogService } from './dialog.service';\nimport {\n  IDialogBelonging,\n  IDialogCoreConfig,\n  IDialogEventsController,\n  IDialogPublicResponse,\n  IDialogResponse,\n  IPrivateResponseMerged\n} from './interfaces';\n\n// region *** Public ***\n\nexport class DialogInitializer {\n  private dialogCarrier: DialogCarrier = new DialogCarrier();\n\n  constructor(private component: Type<any>) {\n    this.dialogCarrier.setComponent(this.component);\n  }\n\n  /** Generic method accept expected payload from dynamic child component.*/\n  openDialog$<ResponsePayload = any>(): Observable<\n    IDialogPublicResponse<ResponsePayload>\n  > {\n    return this.dialogCarrier.openDialog$().pipe(\n      map(resp => {\n        const basicDialogResponse = new DialogResponse();\n        const dataControl = new DataControl();\n        dataControl.copyValuesFrom(resp, basicDialogResponse);\n        return basicDialogResponse;\n      }),\n      take(1)\n    );\n  }\n\n  /** It accepts list of custom buttons */\n  setButtons(_Buttons: IButton[]): void {\n    this.dialogCarrier.setButtons(_Buttons);\n  }\n\n  setCustomData(_CustomData: any) {\n    this.dialogCarrier.setCustomData(_CustomData);\n  }\n\n  setConfig(_DialogConfig: IDialogCoreConfig) {\n    this.dialogCarrier.setConfig(_DialogConfig);\n  }\n}\n\nexport class DialogResponse\n  extends DataControl\n  implements IDialogResponse, IDialogPublicResponse<any> {\n  // private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n  Payload: any = null;\n  Success: boolean = null;\n  ClickedButtonID: string = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @ignore\n   */\n  setPayload(_Payload: any): void {\n    this.Payload = _Payload;\n  }\n\n  /**\n   * @ignore\n   */\n  setClickedButtonID(_ClickedButtonID): void {\n    this.ClickedButtonID = _ClickedButtonID;\n  }\n}\n\nexport class DialogEventsController implements IDialogEventsController {\n  defaultResponse: IPrivateResponseMerged;\n\n  private readonly _afterClosed: Subject<IPrivateResponseMerged> = new Subject<IPrivateResponseMerged>();\n  afterClosed$: Observable<IPrivateResponseMerged> = this._afterClosed.asObservable();\n\n  private readonly _afterLoader: any = new Subject<string>();\n  afterLoader$: Observable<string> = this._afterLoader.asObservable();\n  private readonly _onButtonClick: Subject<IButton> = new Subject<IButton>();\n  onButtonClick$: Observable<IButton> = this._onButtonClick.asObservable();\n  private readonly _buttonList: Subject<IButton[]> = new Subject<IButton[]>();\n  buttonList$: Observable<IButton[]> = this._buttonList.asObservable();\n\n  constructor(private EntityUniqueID: string) {}\n\n  close(_Payload: any = null): void {\n    console.log(this.defaultResponse);\n    this.defaultResponse.setPayload(_Payload);\n    this._afterClosed.next(this.defaultResponse);\n  }\n\n  onButtonClick(_Button: IButton): void {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList: IButton[]): void {\n    this._buttonList.next(_ButtonList);\n  }\n\n  closeLoader(): void {\n    setTimeout(() => {\n      this._afterLoader.next(this.EntityUniqueID);\n    }, 0);\n  }\n\n  setDefaultResponse(_Response: IPrivateResponseMerged): void {\n    this.defaultResponse = _Response;\n  }\n}\n\n// endregion\n\nexport class DialogDefaultResponse\n  extends DialogResponse\n  implements IPrivateResponseMerged {\n  DialogBelonging: IDialogBelonging = null;\n\n  constructor() {\n    super();\n  }\n\n  setBelonging(_DialogBelonging): void {\n    this.DialogBelonging = _DialogBelonging;\n  }\n}\n\nexport class DialogCarrier {\n  dialogBelonging: DialogBelonging = new DialogBelonging();\n  private component: Type<any>;\n\n  constructor() {}\n\n  setComponent(_Component: Type<any>): void {\n    this.component = _Component;\n  }\n\n  setButtons(_Buttons: IButton[]) {\n    if (_Buttons.length) {\n      this.dialogBelonging.Buttons = _Buttons;\n    }\n  }\n\n  setCustomData(_CustomData: any) {\n    this.dialogBelonging.CustomData = _CustomData;\n  }\n\n  setConfig(_DialogConfig: IDialogCoreConfig) {\n    // region *** local UserConfig (defined on place where dialog is called) ***\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      _DialogConfig,\n      this.dialogBelonging.DialogCoreConfig\n    );\n    if (_DialogConfig?.LoaderComponent) {\n      this.dialogBelonging.DialogCoreConfig.DisplayLoader = true;\n    }\n    // endregion\n  }\n\n  openDialog$(): Observable<IPrivateResponseMerged> {\n    const service: DialogService = ServiceLocator.injector.get(DialogService);\n    const dialogController = service.open(this.component, this.dialogBelonging);\n    return dialogController.afterClosed$;\n  }\n}\n\nexport class DialogCoreConfig extends Sizes implements IDialogCoreConfig {\n  EscapeKeyClose: boolean = null;\n  HideScrollbar: boolean = null;\n  ButtonPosition: VerticalPosition = null;\n  LayoutType: DialogLayoutDisplay = null;\n  DisplayLoader: boolean = null;\n  LoaderComponent: Type<any> = null;\n}\n\nexport class DialogSettings {\n  Buttons: IButton[] = [];\n  DialogCoreConfig: IDialogCoreConfig = new DialogCoreConfig();\n}\n\nexport class DialogBelonging<CustomData = any>\n  extends DialogSettings\n  implements IDialogBelonging {\n  /** @internal */\n  EntityUniqueID: string = 'D' + Math.random().toString(36).substr(2, 9);\n\n  CustomData: CustomData = null;\n  EventsController: IDialogEventsController;\n\n  constructor() {\n    super();\n    this.EventsController = new DialogEventsController(this.EntityUniqueID);\n    const dialogConfigurator: DialogConfigService = ServiceLocator.injector.get(\n      DialogConfigService\n    );\n    const baseSettings = new DialogSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      dialogConfigurator.productionConfig.DialogCoreConfig,\n      baseSettings.DialogCoreConfig\n    );\n    this.DialogCoreConfig = baseSettings.DialogCoreConfig;\n    this.Buttons = dialogConfigurator.productionConfig.Buttons.slice();\n  }\n}\n","export enum ToastProgressBarEnum {\n  NONE = 0,\n  INCREASE = 1,\n  DECREASE = 2\n}\n\nexport enum ToastPositionEnum {\n  TOP_LEFT = 'top-left',\n  TOP_CENTER = 'top-center',\n  TOP_RIGHT = 'top-right',\n  TOP_FULL_WIDTH = 'top-fullwidth',\n  BOTTOM_LEFT = 'bottom-left',\n  BOTTOM_CENTER = 'bottom-center',\n  BOTTOM_RIGHT = 'bottom-right',\n  BOTTOM_FULL_WIDTH = 'bottom-fullwidth'\n}\n\nexport enum ToastUserViewTypeEnum {\n  SIMPLE = 'simple',\n  STANDARD = 'standard'\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DialogLayoutDisplay } from '../../../core/enums';\nimport { DataControl } from '../../../core/global-classes';\nimport { ToastSettings } from './classes';\nimport {\n  ToastPositionEnum,\n  ToastProgressBarEnum,\n  ToastUserViewTypeEnum\n} from './enums';\nimport {\n  IGlobalToastSettings,\n  IToastNotificationUserConfig\n} from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastNotificationConfigService {\n  authorConfig: IToastNotificationUserConfig = new ToastSettings();\n  productionConfig: IToastNotificationUserConfig = new ToastSettings();\n  private dataControl = new DataControl();\n\n  constructor(\n    @Inject('toastNotificationConfig')\n    private userConfig: IToastNotificationUserConfig = {}\n  ) {\n    // region *** toastNotification userConfig (user input app-module) ***\n    const userConfigBase = new ToastSettings();\n\n    this.dataControl.copyValuesFrom(\n      userConfig.ToastCoreConfig,\n      userConfigBase.ToastCoreConfig\n    ); // this will make sure that object has right properties\n\n    userConfig.ToastCoreConfig = userConfigBase.ToastCoreConfig;\n    // endregion\n\n    // region *** author default config values (if there is no user input) ***\n    this.authorConfig.ToastCoreConfig.ButtonPosition = 'right';\n    this.authorConfig.ToastCoreConfig.TextPosition = 'left';\n    this.authorConfig.ToastCoreConfig.ToastPosition =\n      ToastPositionEnum.TOP_RIGHT;\n    this.authorConfig.ToastCoreConfig.ProgressBar =\n      ToastProgressBarEnum.INCREASE;\n    this.authorConfig.ToastCoreConfig.ToastUserViewType =\n      ToastUserViewTypeEnum.SIMPLE;\n    this.authorConfig.ToastCoreConfig.AutoCloseDelay = 2500;\n    this.authorConfig.ToastCoreConfig.DisableIcon = false;\n    this.authorConfig.ToastCoreConfig.AllowHTMLMessage = true;\n    this.authorConfig.ToastCoreConfig.LayoutType = DialogLayoutDisplay.NONE;\n    this.authorConfig.GlobalSettings.AllowedNotificationsAtOnce = 5;\n\n    // endregion\n\n    // region *** Production setup ***\n\n    this.setResetGlobalToastConfig();\n    this.dataControl.copyValuesFrom(\n      this.authorConfig.ToastCoreConfig,\n      this.productionConfig.ToastCoreConfig\n    );\n    this.dataControl.copyValuesFrom(\n      this.userConfig.ToastCoreConfig,\n      this.productionConfig.ToastCoreConfig\n    );\n    // endregion\n  }\n\n  setResetGlobalToastConfig(globalToastConfig?: IGlobalToastSettings): void {\n    this.dataControl.copyValuesFrom(\n      this.authorConfig.GlobalSettings,\n      this.productionConfig.GlobalSettings\n    );\n    this.dataControl.copyValuesFrom(\n      globalToastConfig ? globalToastConfig : this.userConfig.GlobalSettings,\n      this.productionConfig.GlobalSettings\n    );\n  }\n}\n","import { Component, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport { Timer } from '../../../core/global-classes';\nimport { IButton } from '../../../core/global-interfaces';\n\nimport {\n  ToastNotificationBelonging,\n  ToastNotificationDefaultResponse\n} from './classes';\n\n@Injectable()\nexport abstract class WrapperAbstraction implements OnDestroy {\n  fadeInOutAnimation: string = 'open';\n  timerStarted$ = new BehaviorSubject('start-counter');\n  subsToClosingDelay: Subscription;\n  subTimer: Subscription;\n  isTimerStarted = false;\n  timeout;\n  timer: Timer = new Timer();\n\n  protected constructor(\n    public toastNotificationBelonging: ToastNotificationBelonging\n  ) {}\n\n  mouseOver() {\n    this.timerStarted$.next('stop-counter');\n    this.fadeInOutAnimation = 'open';\n    this.subsToClosingDelay?.unsubscribe();\n  }\n\n  mouseOut() {\n    this.timerStarted$.next('start-counter');\n  }\n\n  onOverlayClicked(evt: MouseEvent): void {\n    //  console.log('onOverlayClicked');\n  }\n\n  onToastClicked(evt: MouseEvent): void {\n    // console.log('onOverlayClicked');\n  }\n\n  setResponse(_IsSuccess: boolean, _ClickedButtonID?: string): void {\n    const response = new ToastNotificationDefaultResponse();\n    if (_ClickedButtonID) {\n      response.ClickedButtonID = _ClickedButtonID;\n    }\n\n    response.setSuccess(_IsSuccess);\n    response.setBelonging(this.toastNotificationBelonging);\n    this.toastNotificationBelonging.EventsController.setDefaultResponse(\n      response\n    );\n  }\n\n  onCustomButton(_Button: IButton): void {\n    this.toastNotificationBelonging.EventsController.onButtonClick(_Button);\n    this.setResponse(true, _Button.ID);\n    this.toastNotificationBelonging.EventsController.close();\n  }\n\n  onButtonClick(_Type: 'confirm' | 'decline') {\n    let buttonID;\n    if (_Type === 'confirm') {\n      buttonID = this.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel.toLowerCase();\n    } else if (_Type === 'decline') {\n      buttonID = this.toastNotificationBelonging.ToastCoreConfig.DeclineLabel.toLowerCase();\n    }\n\n    this.setResponse(_Type === 'confirm', buttonID);\n    this.toastNotificationBelonging.EventsController.close();\n  }\n\n  autoClose() {\n    if (this.autoCloseCondition()) {\n      this.timer.setMilliseconds(\n        this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay\n      );\n      this.subTimer = this.timerStarted$\n        .pipe(\n          tap(next => {\n            if ('start-counter' === next) {\n              this.timer.start();\n              this.isTimerStarted = true;\n              this.timeout = setTimeout(() => {\n                this.subsToClosingDelay = this.closeParent$(\n                  'close-slow'\n                ).subscribe(resp => {\n                  this.toastNotificationBelonging.EventsController.close();\n                });\n              }, this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay);\n            } else if ('stop-counter' === next) {\n              if (this.isTimerStarted) {\n                this.timer.stop();\n                clearTimeout(this.timeout);\n                this.isTimerStarted = false;\n              }\n            }\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  autoCloseCondition(): boolean {\n    return (\n      this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay &&\n      !(\n        this.toastNotificationBelonging.Buttons.length ||\n        this.toastNotificationBelonging.ToastCoreConfig.DeclineLabel ||\n        this.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel\n      )\n    );\n  }\n\n  closeParent$(_ClosingAnimation: string): Observable<any> {\n    this.fadeInOutAnimation = _ClosingAnimation;\n    const timer = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n    return of('').pipe(delay(timer));\n  }\n\n  close() {\n    this.toastNotificationBelonging.EventsController.close();\n  }\n\n  ngOnDestroy() {\n    this.subsToClosingDelay?.unsubscribe();\n    this.subTimer?.unsubscribe();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Inject\n} from '@angular/core';\nimport { fadeInOut } from '../../../core/animations';\nimport { GlobalConfigService } from '../../../core/global-config.service';\nimport { ToastNotificationBelonging } from '../core/classes';\nimport { WrapperAbstraction } from '../core/wrapper-abstraction';\n\n@Component({\n  selector: 'app-toast-notification-simple-wrapper',\n  templateUrl: './toast-notification-simple-wrapper.component.html',\n  styleUrls: ['./toast-notification-simple-wrapper.component.scss'],\n  animations: [fadeInOut(0, 1)]\n})\nexport class ToastNotificationSimpleWrapperComponent\n  extends WrapperAbstraction\n  implements AfterViewInit {\n  constructor(\n    @Inject('toastNotificationBelonging')\n    public toastNotificationBelonging: ToastNotificationBelonging,\n    public gConfig: GlobalConfigService,\n    private cd: ChangeDetectorRef\n  ) {\n    super(toastNotificationBelonging);\n  }\n\n  ngAfterViewInit(): void {\n    this.setResponse(false);\n    this.cd.detectChanges();\n    this.autoClose();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Inject\n} from '@angular/core';\nimport { fadeInOut } from '../../../core/animations';\nimport { GlobalConfigService } from '../../../core/global-config.service';\nimport { ToastNotificationBelonging } from '../core/classes';\nimport { WrapperAbstraction } from '../core/wrapper-abstraction';\n\n@Component({\n  selector: 'app-toast-notification-wrapper',\n  templateUrl: './toast-notification-wrapper.component.html',\n  styleUrls: ['./toast-notification-wrapper.component.scss'],\n  animations: [fadeInOut(0, 1)]\n})\nexport class ToastNotificationWrapperComponent\n  extends WrapperAbstraction\n  implements AfterViewInit {\n  constructor(\n    @Inject('toastNotificationBelonging')\n    public toastNotificationBelonging: ToastNotificationBelonging,\n    public gConfig: GlobalConfigService,\n    private cd: ChangeDetectorRef\n  ) {\n    super(toastNotificationBelonging);\n  }\n\n  ngAfterViewInit(): void {\n    this.setResponse(false);\n    this.cd.detectChanges();\n    this.autoClose();\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DialogInjector } from '../../../core/dialog-injector';\nimport { GlobalConfigService } from '../../../core/global-config.service';\nimport { ToastNotificationSimpleWrapperComponent } from '../toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nimport { ToastNotificationWrapperComponent } from '../toast-notification-wrapper/toast-notification-wrapper.component';\nimport {\n  ToastNotificationBelonging,\n  ToastNotificationEventsController\n} from './classes';\nimport { ToastPositionEnum, ToastUserViewTypeEnum } from './enums';\nimport {\n  IPrivateResponseMerged,\n  IToastNotificationRawState\n} from './interfaces';\n\nimport { ToastNotificationConfigService } from './toast-notification-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastNotificationService {\n  // toastComponentRefList: ComponentRef<ToastNotificationWrapperComponent>[]    = [];\n  toastComponentRefList: ComponentRef<any>[] = [];\n  bufferToastRawList: IToastNotificationRawState[] = [];\n  bufferCheckingIntervalIsReady: boolean = true;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef,\n    private toastConfig: ToastNotificationConfigService,\n    private gConfigService: GlobalConfigService\n  ) {}\n\n  openToast$(\n    _ToastNotificationBelonging: ToastNotificationBelonging\n  ): Observable<IPrivateResponseMerged> {\n    let eventController = _ToastNotificationBelonging.EventsController;\n    // console.log(`%c ${_ToastNotificationBelonging.EntityUniqueID} `, `background: #339933; color: #fff`);\n\n    const toastRawInstance = this.prepareRawToast(\n      eventController,\n      _ToastNotificationBelonging\n    );\n    this.listeners(eventController);\n    this.internalRouting(toastRawInstance);\n    return eventController.afterClosed$;\n  }\n\n  internalRouting(_ToastRawInstance: IToastNotificationRawState): boolean {\n    if (this.isRefListAvailable()) {\n      this.sendToProduction(_ToastRawInstance);\n      return true;\n    } else {\n      this.sendToBuffer(_ToastRawInstance);\n      return false;\n    }\n  }\n\n  sendToBuffer(_ToastRawInstance: IToastNotificationRawState) {\n    this.bufferToastRawList.push(_ToastRawInstance);\n  }\n\n  sendToProduction(_ToastRawInstance: IToastNotificationRawState): void {\n    const componentRef = this.getComponentRef(_ToastRawInstance);\n    if (componentRef) {\n      this.toastComponentRefList.push(componentRef);\n      componentRef.instance.toastNotificationBelonging =\n        _ToastRawInstance.ToastBelonging;\n      this.appendToBodyParentComponent(componentRef);\n    }\n  }\n\n  isRefListAvailable(): boolean {\n    return (\n      this.toastComponentRefList.length <\n      this.toastConfig.productionConfig.GlobalSettings\n        .AllowedNotificationsAtOnce\n    );\n  }\n\n  prepareRawToast(\n    _EventsController: ToastNotificationEventsController,\n    _ToastNotificationBelonging: ToastNotificationBelonging\n  ): IToastNotificationRawState {\n    const weakMap = new WeakMap();\n    weakMap.set(ToastNotificationEventsController, _EventsController);\n\n    return {\n      WeakMap: weakMap,\n      ToastBelonging: _ToastNotificationBelonging\n    };\n  }\n\n  getComponentRef(\n    _ToastNotificationRawState: IToastNotificationRawState\n  ): ComponentRef<any> | null {\n    const dialogIndex = this.findDialogIndex(\n      _ToastNotificationRawState.ToastBelonging.EntityUniqueID\n    );\n    if (dialogIndex === -1) {\n      let toastUserViewComponent: Type<any> = ToastNotificationWrapperComponent;\n      if (\n        _ToastNotificationRawState.ToastBelonging.ToastCoreConfig\n          .ToastUserViewType === ToastUserViewTypeEnum.SIMPLE\n      ) {\n        toastUserViewComponent = ToastNotificationSimpleWrapperComponent;\n      }\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        toastUserViewComponent\n      );\n      return componentFactory.create(\n        new DialogInjector(this.injector, _ToastNotificationRawState.WeakMap)\n      );\n    }\n    return null;\n  }\n\n  listeners(_EventsController: ToastNotificationEventsController) {\n    // Listener for closing dialog\n    const closeDialogSubscription = _EventsController.afterClosed$.subscribe(\n      response => {\n        // this.removeFromBodyParentComponent(modalIndex);\n        this.removeFromBody(response.toastNotificationBelonging.EntityUniqueID);\n        closeDialogSubscription.unsubscribe();\n      }\n    );\n  }\n\n  appendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n    // attach view to ignite lifecycle hooks\n    this.appRef.attachView(_ComponentRef.hostView);\n\n    const toastPosition: ToastPositionEnum =\n      _ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig\n        .ToastPosition;\n    const openInElementID =\n      _ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig\n        .OpenInElementID;\n    let targetNode: HTMLElement;\n    if (!openInElementID) {\n      this.setToastWrapperNode(\n        _ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig\n          .ToastPosition,\n        this.setToastOverlayNode()\n      );\n      targetNode = document.getElementById(`toast-wrapper-${toastPosition}`);\n    } else {\n      targetNode = document.getElementById(openInElementID);\n    }\n\n    const domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    const toastEntity = document.createElement('div');\n    toastEntity.setAttribute(\n      'id',\n      _ComponentRef.instance.toastNotificationBelonging.EntityUniqueID\n    );\n    toastEntity.className = 'toast-entity';\n    const split = toastPosition.split('-');\n    if (split[1] === 'fullwidth') {\n      toastEntity.style.width = '93vw';\n    } else if (openInElementID) {\n      toastEntity.style.width = '100%';\n    } else {\n      toastEntity.style.width = '300px';\n    }\n    toastEntity.style.margin = 'auto';\n    toastEntity.prepend(domElem);\n    // targetNode.prepend(toastEntity);\n    setTimeout(() => {\n      targetNode.prepend(toastEntity);\n    }, 200);\n  }\n\n  removeFromBody(_EntityUniqueID: string): void {\n    const modalIndex = this.findDialogIndex(_EntityUniqueID);\n    if (modalIndex > -1) {\n      if (this.bufferToastRawList.length) {\n        this.sendToProduction(this.bufferToastRawList[0]);\n        this.bufferToastRawList.splice(0, 1);\n      }\n\n      this.toastComponentRefList[modalIndex].instance\n        .closeParent$('close-fast')\n        .pipe(\n          map(item => {\n            const modalIndex = this.findDialogIndex(_EntityUniqueID);\n            if (this.toastComponentRefList[modalIndex]) {\n              const toastEntity = document.getElementById(\n                this.toastComponentRefList[modalIndex].instance\n                  .toastNotificationBelonging.EntityUniqueID\n              );\n              toastEntity.remove();\n              // console.log(`%c ${this.toastComponentRefList[modalIndex].instance.toastNotificationBelonging.EntityUniqueID} `, `background: #cc3333; color: #fff`);\n              this.appRef.detachView(\n                this.toastComponentRefList[modalIndex].hostView\n              );\n              this.toastComponentRefList[modalIndex].destroy();\n              this.toastComponentRefList.splice(modalIndex, 1);\n            }\n          })\n        )\n        .subscribe();\n    }\n  }\n\n  findDialogIndex(_DialogUniqueID: string): number {\n    return this.toastComponentRefList.findIndex(item => {\n      return (\n        _DialogUniqueID ===\n        item.instance.toastNotificationBelonging.EntityUniqueID\n      );\n    });\n  }\n\n  private setToastOverlayNode(): HTMLElement {\n    const bodyNode = document.body || document.getElementsByTagName('body')[0];\n    if (!bodyNode) {\n      return;\n    }\n    // check the overlay\n    let toastOverlayNode = document.getElementById(\n      'toast-overlay-container'\n    ) as HTMLStyleElement;\n\n    if (!toastOverlayNode) {\n      let toastOverlayNode = document.createElement('div');\n      toastOverlayNode.setAttribute('id', 'toast-overlay-container');\n      toastOverlayNode.appendChild(document.createTextNode(''));\n      toastOverlayNode.style.position = 'fixed';\n      toastOverlayNode.style.top = '0';\n      toastOverlayNode.style.left = '0';\n      toastOverlayNode.style.zIndex = '999999999';\n      bodyNode.appendChild(toastOverlayNode);\n      return toastOverlayNode;\n    }\n\n    return toastOverlayNode;\n  }\n\n  private setToastWrapperNode(\n    _Position: ToastPositionEnum,\n    _ToastOverlayNode: HTMLElement\n  ) {\n    let toastWrapperNode = document.getElementById(\n      `toast-wrapper-${_Position}`\n    ) as HTMLStyleElement;\n    if (!toastWrapperNode) {\n      const toastWrapper = document.createElement('div');\n      toastWrapper.setAttribute('id', 'toast-wrapper-' + _Position);\n      toastWrapper.appendChild(document.createTextNode(''));\n      _ToastOverlayNode.prepend(toastWrapper);\n\n      const split = _Position.split('-');\n\n      if (split[1] === 'right' || split[1] === 'left') {\n        this.gConfigService\n          .getSheet('ngx-awesome-popup-styles')\n          .addRule(\n            `#toast-wrapper-${_Position}`,\n            `${split[0]}: 20px; ${split[1]}: 20px; position: fixed; z-index: 999999;`\n          );\n      }\n      if (split[1] === 'center') {\n        this.gConfigService\n          .getSheet('ngx-awesome-popup-styles')\n          .addRule(\n            `#toast-wrapper-${_Position}`,\n            `${split[0]}: 20px; width: 100%; position: fixed; z-index: 999999; pointer-events: none;`\n          );\n      }\n      if (split[1] === 'fullwidth') {\n        this.gConfigService\n          .getSheet('ngx-awesome-popup-styles')\n          .addRule(\n            `#toast-wrapper-${_Position}`,\n            `${split[0]}: 10px; width: 100%; position: fixed; z-index: 999999; pointer-events: none;`\n          );\n      }\n    }\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DialogLayoutDisplay, VerticalPosition } from '../../../core/enums';\nimport { DataControl, Dispatch } from '../../../core/global-classes';\nimport { IButton, IDispatch } from '../../../core/global-interfaces';\nimport { ServiceLocator } from '../../../locator.service';\nimport {\n  ToastPositionEnum,\n  ToastProgressBarEnum,\n  ToastUserViewTypeEnum\n} from './enums';\nimport {\n  IGlobalToastSettings,\n  IPrivateResponseMerged,\n  IToastCoreConfig,\n  IToastNotificationBelonging,\n  IToastNotificationPublicResponse,\n  IToastNotificationResponse\n} from './interfaces';\nimport { ToastNotificationConfigService } from './toast-notification-config.service';\nimport { ToastNotificationService } from './toast-notification.service';\n\n// region *** Public ***\nexport class ToastNotificationInitializer {\n  private toastNotificationCarrier: ToastNotificationCarrier = new ToastNotificationCarrier();\n\n  constructor() {}\n\n  openToastNotification$(): Observable<IToastNotificationPublicResponse> {\n    return this.toastNotificationCarrier.openToastNotification$().pipe(\n      map(resp => {\n        const basicToastNotificationResponse = new ToastNotificationResponse();\n        const dataControl = new DataControl();\n        dataControl.copyValuesFrom(resp, basicToastNotificationResponse);\n        return basicToastNotificationResponse;\n      }),\n      take(1)\n    );\n  }\n\n  setButtons(_Buttons: IButton[]): void {\n    this.toastNotificationCarrier.setButtons(_Buttons);\n  }\n\n  setConfig(_ToastNotificationConfig: IToastCoreConfig) {\n    this.toastNotificationCarrier.setConfig(_ToastNotificationConfig);\n  }\n\n  setDispatch(_Title: string, _Message: string = null): void {\n    this.toastNotificationCarrier.setTitle(_Title);\n    this.toastNotificationCarrier.setMessage(_Message);\n  }\n\n  setTitle(_Title: string): void {\n    this.toastNotificationCarrier.setTitle(_Title);\n  }\n\n  setMessage(_Message: string): void {\n    this.toastNotificationCarrier.setMessage(_Message);\n  }\n\n  setButtonLabels(_Confirm: string, _Decline?: string): void {\n    this.toastNotificationCarrier.setButtonLabels(_Confirm, _Decline);\n  }\n}\n\nexport class ToastNotificationResponse\n  extends DataControl\n  implements IToastNotificationResponse, IToastNotificationPublicResponse {\n  // private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n  Success: boolean = null;\n  ClickedButtonID: string = null;\n\n  constructor() {\n    super();\n  }\n\n  setSuccess(_IsSuccess: boolean): void {\n    this.Success = _IsSuccess;\n  }\n\n  setClickedButtonID(_ClickedButtonID): void {\n    this.ClickedButtonID = _ClickedButtonID;\n  }\n}\n\nexport class ToastNotificationEventsController {\n  defaultResponse: IPrivateResponseMerged;\n\n  private readonly _afterClosed: Subject<IPrivateResponseMerged> = new Subject<IPrivateResponseMerged>();\n  afterClosed$: Observable<IPrivateResponseMerged> = this._afterClosed.asObservable();\n  private readonly _onButtonClick: Subject<IButton> = new Subject<IButton>();\n  onButtonClick$: Observable<IButton> = this._onButtonClick.asObservable();\n  private readonly _buttonList: Subject<IButton[]> = new Subject<IButton[]>();\n  buttonList$: Observable<IButton[]> = this._buttonList.asObservable();\n\n  constructor(private EntityUniqueID: string) {}\n\n  close(_Response?: IPrivateResponseMerged): void {\n    const response = _Response ? _Response : this.defaultResponse;\n    this._afterClosed.next(response);\n  }\n\n  onButtonClick(_Button: IButton): void {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList: IButton[]): void {\n    this._buttonList.next(_ButtonList);\n  }\n\n  setDefaultResponse(_Response: IPrivateResponseMerged): void {\n    this.defaultResponse = _Response;\n  }\n}\n\n// endregion\n\nexport class ToastNotificationDefaultResponse\n  extends ToastNotificationResponse\n  implements IPrivateResponseMerged {\n  toastNotificationBelonging: ToastNotificationBelonging = null;\n\n  constructor() {\n    super();\n  }\n\n  setBelonging(_ToastNotificationBelonging): void {\n    this.toastNotificationBelonging = _ToastNotificationBelonging;\n  }\n}\n\nexport class ToastNotificationCarrier {\n  toastNotificationBelonging: ToastNotificationBelonging = new ToastNotificationBelonging();\n\n  constructor() {}\n\n  setButtons(_Buttons: IButton[]) {\n    if (_Buttons.length) {\n      this.toastNotificationBelonging.Buttons = _Buttons;\n    }\n  }\n\n  setTitle(_Title: string): void {\n    this.toastNotificationBelonging.Dispatch.Title = _Title;\n  }\n\n  setMessage(_Message: string): void {\n    this.toastNotificationBelonging.Dispatch.Message = _Message;\n  }\n\n  setButtonLabels(_Confirm: string, _Decline: string): void {\n    this.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel = _Confirm;\n    this.toastNotificationBelonging.ToastCoreConfig.DeclineLabel = _Decline;\n  }\n\n  setConfig(_ToastNotificationBelonging: IToastCoreConfig) {\n    // region *** local UserConfig (defined on place where dialog is called) ***\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      _ToastNotificationBelonging,\n      this.toastNotificationBelonging.ToastCoreConfig\n    );\n    // endregion\n  }\n\n  openToastNotification$(): Observable<IPrivateResponseMerged> {\n    if (\n      !this.toastNotificationBelonging.Dispatch.Title &&\n      !this.toastNotificationBelonging.Dispatch.Message\n    ) {\n      throw Error(\n        'Toast notification can not be without both message and title.'\n      );\n    }\n    const service: ToastNotificationService = ServiceLocator.injector.get(\n      ToastNotificationService\n    );\n    return service.openToast$(this.toastNotificationBelonging);\n  }\n}\n\nexport class GlobalToastSettings implements IGlobalToastSettings {\n  AllowedNotificationsAtOnce: number = null;\n}\n\nexport class ResetToastGlobalSettings {\n  constructor(globalToastConfig?: IGlobalToastSettings) {\n    const globalToastConfigService: ToastNotificationConfigService = ServiceLocator.injector.get(\n      ToastNotificationConfigService\n    );\n    if (globalToastConfigService) {\n      globalToastConfigService.setResetGlobalToastConfig(globalToastConfig);\n    } else {\n      globalToastConfigService.setResetGlobalToastConfig();\n    }\n  }\n}\n\nexport class ToastSettings {\n  Buttons: IButton[] = [];\n  ToastCoreConfig: IToastCoreConfig = new ToastCoreConfig();\n  Dispatch: IDispatch = new Dispatch();\n  GlobalSettings: GlobalToastSettings = new GlobalToastSettings();\n}\n\nexport class ToastCoreConfig implements IToastCoreConfig {\n  ToastPosition: ToastPositionEnum = null;\n  ProgressBar: ToastProgressBarEnum = null;\n  ToastUserViewType: ToastUserViewTypeEnum = null;\n  OpenInElementID: string = null;\n  ButtonPosition: VerticalPosition = null;\n  TextPosition: VerticalPosition = null;\n  LayoutType: DialogLayoutDisplay = null;\n  Dispatch: IDispatch = null;\n  ConfirmLabel: string = null;\n  DeclineLabel: string = null;\n  AutoCloseDelay: number = null;\n  DisableIcon: boolean = null;\n  AllowHTMLMessage: boolean = null;\n}\n\nexport class ToastNotificationBelonging\n  extends ToastSettings\n  implements IToastNotificationBelonging {\n  EntityUniqueID: string = 'T' + Math.random().toString(36).substr(2, 9);\n  EventsController: ToastNotificationEventsController;\n\n  constructor() {\n    super();\n    this.EventsController = new ToastNotificationEventsController(\n      this.EntityUniqueID\n    );\n    const toastNotificationConfigurator: ToastNotificationConfigService = ServiceLocator.injector.get(\n      ToastNotificationConfigService\n    );\n    const baseSettings = new ToastSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(\n      toastNotificationConfigurator.productionConfig.ToastCoreConfig,\n      baseSettings.ToastCoreConfig\n    );\n    this.ToastCoreConfig = baseSettings.ToastCoreConfig;\n    this.Buttons = toastNotificationConfigurator.productionConfig.Buttons.slice();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GlobalConfigService } from './core/global-config.service';\nimport { IGlobalUserConfig } from './core/global-interfaces';\nimport { InsertionLoaderDirective } from './core/insertion-loader.directive';\nimport { InsertionDirective } from './core/insertion.directive';\nimport { DefaultLoaderComponent } from './default-loader/default-loader.component';\nimport { ServiceLocator } from './locator.service';\nimport { ConfirmBoxWrapperComponent } from './types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component';\nimport { ConfirmBoxBelonging } from './types/confirm-box/core/classes';\nimport { ConfirmBoxConfigService } from './types/confirm-box/core/confirm-box-config.service';\nimport { ConfirmBoxService } from './types/confirm-box/core/confirm-box-service';\nimport { IConfirmBoxUserConfig } from './types/confirm-box/core/interfaces';\nimport { DialogBelonging } from './types/dialog/core/classes';\nimport { DialogConfigService } from './types/dialog/core/dialog-config.service';\nimport { DialogService } from './types/dialog/core/dialog.service';\nimport { IDialogUserConfig } from './types/dialog/core/interfaces';\nimport { DialogWrapperComponent } from './types/dialog/dialog-wrapper/dialog-wrapper.component';\nimport { ToastNotificationBelonging } from './types/toast-notification/core/classes';\nimport { IToastNotificationUserConfig } from './types/toast-notification/core/interfaces';\nimport { ToastNotificationConfigService } from './types/toast-notification/core/toast-notification-config.service';\nimport { ToastNotificationService } from './types/toast-notification/core/toast-notification.service';\nimport { ToastNotificationSimpleWrapperComponent } from './types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nimport { ToastNotificationWrapperComponent } from './types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component';\n\n@NgModule({\n  imports: [CommonModule, BrowserModule, BrowserAnimationsModule],\n  providers: [GlobalConfigService]\n})\nexport class NgxAwesomePopupModule {\n  constructor(private injector: Injector) {\n    ServiceLocator.injector = injector;\n  }\n\n  static forRoot(\n    globalConfig?: IGlobalUserConfig\n  ): ModuleWithProviders<NgxAwesomePopupModule> {\n    return {\n      ngModule: NgxAwesomePopupModule,\n      providers: [{ provide: 'cdGlobalConfig', useValue: globalConfig }]\n    };\n  }\n}\n\n@NgModule({\n  declarations: [\n    DialogWrapperComponent,\n    DefaultLoaderComponent,\n    InsertionDirective,\n    InsertionLoaderDirective\n  ],\n  imports: [CommonModule],\n  providers: [DialogService, DialogConfigService],\n  entryComponents: [DialogWrapperComponent, DefaultLoaderComponent]\n})\nexport class DialogConfigModule {\n  static forRoot(\n    dialogConfig?: IDialogUserConfig\n  ): ModuleWithProviders<DialogConfigModule> {\n    return {\n      ngModule: DialogConfigModule,\n      providers: [\n        { provide: 'dialogConfig', useValue: dialogConfig },\n        { provide: 'dialogBelonging', useClass: DialogBelonging }\n      ]\n    };\n  }\n}\n\n@NgModule({\n  declarations: [ConfirmBoxWrapperComponent],\n  imports: [CommonModule],\n  providers: [ConfirmBoxService, ConfirmBoxConfigService],\n  entryComponents: [ConfirmBoxWrapperComponent]\n})\nexport class ConfirmBoxConfigModule {\n  static forRoot(\n    confirmBoxConfig?: IConfirmBoxUserConfig\n  ): ModuleWithProviders<ConfirmBoxConfigModule> {\n    return {\n      ngModule: ConfirmBoxConfigModule,\n      providers: [\n        { provide: 'confirmBoxConfig', useValue: confirmBoxConfig },\n        { provide: 'confirmBoxBelonging', useClass: ConfirmBoxBelonging }\n      ]\n    };\n  }\n}\n\n@NgModule({\n  declarations: [\n    ToastNotificationWrapperComponent,\n    ToastNotificationSimpleWrapperComponent\n  ],\n  imports: [CommonModule],\n  providers: [ToastNotificationService, ToastNotificationConfigService],\n  entryComponents: [\n    ToastNotificationWrapperComponent,\n    ToastNotificationSimpleWrapperComponent\n  ]\n})\nexport class ToastNotificationConfigModule {\n  static forRoot(\n    toastNotificationConfig?: IToastNotificationUserConfig\n  ): ModuleWithProviders<ToastNotificationConfigModule> {\n    return {\n      ngModule: ToastNotificationConfigModule,\n      providers: [\n        {\n          provide: 'toastNotificationConfig',\n          useValue: toastNotificationConfig\n        },\n        {\n          provide: 'toastNotificationBelonging',\n          useClass: ToastNotificationBelonging\n        }\n      ]\n    };\n  }\n}\n","import {\n  IButton,\n  IColorTypes,\n  IDispatch,\n  IGlobalUserConfig\n} from './ngx-awesome-popup/core/global-interfaces';\nimport { ConfirmBoxInitializer } from './ngx-awesome-popup/types/confirm-box/core/classes';\nimport {\n  IConfirmBoxCoreConfig,\n  IConfirmBoxPublicResponse,\n  IConfirmBoxUserConfig\n} from './ngx-awesome-popup/types/confirm-box/core/interfaces';\nimport {\n  DialogBelonging,\n  DialogInitializer\n} from './ngx-awesome-popup/types/dialog/core/classes';\nimport {\n  IDialogCoreConfig,\n  IDialogEventsController,\n  IDialogPublicResponse,\n  IDialogUserConfig\n} from './ngx-awesome-popup/types/dialog/core/interfaces';\nimport {\n  ResetToastGlobalSettings,\n  ToastNotificationInitializer\n} from './ngx-awesome-popup/types/toast-notification/core/classes';\nimport {\n  IGlobalToastSettings,\n  IToastCoreConfig,\n  IToastNotificationPublicResponse,\n  IToastNotificationUserConfig\n} from './ngx-awesome-popup/types/toast-notification/core/interfaces';\n\n// region *** Interface ***\nexport { IGlobalUserConfig };\nexport { IButton };\nexport { IDispatch };\nexport { IColorTypes };\n\nexport { IConfirmBoxUserConfig };\nexport { IConfirmBoxCoreConfig };\nexport { IConfirmBoxPublicResponse };\n\nexport { IGlobalToastSettings };\nexport { IToastCoreConfig };\nexport { IToastNotificationUserConfig };\nexport { IToastNotificationPublicResponse };\n\nexport { IDialogUserConfig };\nexport { IDialogCoreConfig };\nexport { IDialogPublicResponse };\nexport { IDialogEventsController };\n// endregion\n\nexport { ButtonLayoutDisplay } from './ngx-awesome-popup/core/enums';\nexport { DialogLayoutDisplay } from './ngx-awesome-popup/core/enums';\nexport { VerticalPosition } from './ngx-awesome-popup/core/enums';\nexport { ToastPositionEnum } from './ngx-awesome-popup/types/toast-notification/core/enums';\nexport { ToastProgressBarEnum } from './ngx-awesome-popup/types/toast-notification/core/enums';\nexport { ToastUserViewTypeEnum } from './ngx-awesome-popup/types/toast-notification/core/enums';\n\n/**\n * @returns It will return custom button object ready to be used in child component layout.\n */\nexport { ButtonMaker } from './ngx-awesome-popup/core/global-classes';\n\n/**\n *```typescript\n * // Instantiate config object as example below to change global settings on-fly it takes IGlobalUserConfig\n * as the argument.\n * new ResetGlobalConfig({\n *     ColorList: {\n *            Primary  : '#ff9e00', // optional\n *            Secondary: '#989ea5', // optional\n *            Info     : '#2f8ee5', // optional\n *            Success  : '#3caea3', // optional\n *            Warning  : '#ffc107', // optional\n *            Danger   : '#e46464', // optional\n *            Light    : '#fbfbfb', // optional\n *            Dark     : '#343a40'  // optional\n *           }\n * })\n * ```\n */\nexport { ResetGlobalConfig } from './ngx-awesome-popup/core/global-classes';\n\n/**\n *```typescript\n * // Instantiate toast global config object as example below to change global settings on-fly it takes IGlobalToastSettings\n * as the argument.\n * new ResetToastGlobalSettings({\n *     AllowedNotificationsAtOnce: 2\n * })\n * ```\n */\nexport { ResetToastGlobalSettings };\n\n/**\n * This is the class that needs to be added as DI in the constructor of a child component that will be\n * opened dynamically with {@link DialogInitializer}. It contains various information or\n * event controllers, and listeners that can be used in a child component. Also, there is custom data\n * that is sent from component where the {@link DialogInitializer} is. User can set specific type of\n * custom data that child component will receive by including it as generic type.\n *\n *\n * Example:\n * ```typescript\n *import {DialogBelonging} from 'ngx-awesome-popup';\n *@Component({\n *    selector   : 'app-cup',\n *    templateUrl: './cup.component.html',\n *    styleUrls  : ['./cup.component.scss']\n *})\n * export class CupComponent implements OnInit, OnDestroy {\n *\n *    subscriptions: Subscription[] = [];\n *\n *    constructor(@Inject('dialogBelonging') private dialogBelonging: DialogBelonging) {}\n *\n *    ngOnInit(): void {\n *    console.log(this.dialogBelonging);\n *\n *        this.subscriptions.push(\n *            this.dialogBelonging.EventsController.onButtonClick$.subscribe((_Button) => {\n *            if (_Button.ID === 'ok') {\n *                // Do some logic and close popup.\n *                this.dialogBelonging.EventsController.close();\n *            } else if (_Button.ID === 'cancel') {\n *                // Do some logic and close popup.\n *                this.dialogBelonging.EventsController.close();\n *            }\n *        })\n *        );\n *\n *        setTimeout(() => {\n *            // Close loader after async data is ready.\n *            this.dialogBelonging.EventsController.closeLoader();\n *        }, 1000);\n *    }\n *}\n\n ngOnDestroy(): void {\n        // Close all subscriptions.\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n * ```\n * @category child dynamic component data & event controller\n */\nexport { DialogBelonging };\n\n// region *** Observable response after closing popup ***\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport { IToastNotificationPublicResponse as IToastNotificationResponse };\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport { IConfirmBoxPublicResponse as IConfirmBoxResponse };\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport { IDialogPublicResponse as IDialogResponse };\n// endregion\n\n// region *** Popup open  ***\n\n/**\n * This is the class that needs to be instantiated to set up and ignite a ToastNotification,\n * its purpose is to show short notification to end-user, or even interact with user.\n * It can be evoked from any angular typescript file.\n *\n * Below is the example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n * // Create the initializer.\n *const newToastNotification = new ToastNotificationInitializer();\n *\n * // Set desired Title.\n *newToastNotification.setTitle('Warning!');\n *\n * // Set desired Message.\n *newToastNotification.setMessage('Form is not valid!');\n *\n * // Set desired configuration.\n *newToastNotification.setConfig({\n *      LayoutType: DialogLayoutDisplay.WARNING\n *   });\n\n * // Open a ToastNotification.\n * newConfirmBox.openConfirmBox$().subscribe(resp => {\n *   console.log('confirmBox response: ', resp);\n *  });\n * ```\n * * IToastCoreConfig: {@link IToastCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * IToastNotificationPublicResponse: {@link IToastNotificationPublicResponse}\n * @category Popup open\n */\nexport { ToastNotificationInitializer };\n/**\n * This is the class that needs to be instantiated to set up and ignite a ConfirmBox and create content.\n * Its purpose is to get confirmation response from end-user. It can be called from any angular\n * typescript file.\n *\n * Below is example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n * // Create the initializer.\n *const newConfirmBox = new ConfirmBoxInitializer();\n *\n * // Set desired dispatch: _Title: string, _Message: string.\n *newConfirmBox.setDispatch('Are you sure?', 'That action will delete user!');\n *\n * // Set desired configuration.\n *newConfirmBox.setConfig({\n *      LayoutType: DialogLayoutDisplay.DANGER\n *   });\n *\n * // Set button labels.\n * newConfirmBox.setButtonLabels('YES', 'NO');\n *\n * // Open a ConfirmBox, and get clicked button-id in response.\n * newConfirmBox.openConfirmBox$().subscribe(resp => {\n *   // IConfirmBoxPublicResponse\n *   console.log('confirmBox response: ', resp);\n *  });\n * ```\n * * IConfirmBoxCoreConfig: {@link IConfirmBoxCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * IConfirmBoxPublicResponse: {@link IConfirmBoxPublicResponse}\n * @category Popup open\n */\nexport { ConfirmBoxInitializer };\n/**\n * This is the class that needs to be instantiated to set up and ignite a Dialog and create dynamic component,\n * its purpose is to render any angular component view with specific configuration from any angular typescript file.\n * Dynamic component means that user can evoke the popup from typescript and component view\n * is dynamically created with the Awesome Popup engine. There is no need to call any selector in HTML to create component view.\n *\n * DialogInitializer can send data to child component (dynamic component) where data will be accessible with {@link DialogBelonging}.\n *\n * Below is the example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n *  import {DialogInitializer, DialogLayoutDisplay, ButtonMaker, ButtonLayoutDisplay} from 'ngx-awesome-popup';<\n *  import {CupComponent} from './cup/cup.component';\n *\n *  const newDialogPopup = new DialogInitializer(CupComponent); // Any Angular component.\n *\n *  // Custom data will be sent to dynamic component available in dialogBelonging object.\n *  newDialogPopup.setCustomData({name: 'John', surname: 'Doe', id: 1});\n *\n *  // Local config settings IDialogCoreConfig.\n *  newDialogPopup.setConfig({\n *      Height: '500px',\n *      LayoutType: DialogLayoutDisplay.INFO,\n *      LoaderComponent: Any Angular component name\n *       });\n *\n *  // Custom buttons, listener is available in child component in dialogBelonging object.\n *  newDialogPopup.setButtons([\n *      new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *      new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *  ]);\n *\n *  // Command to open dialog, it returns observable.\n *  newDialogPopup.openDialog$<any>().subscribe(resp => {\n *           console.log('response: ', resp.Payload);\n *       });\n * ```\n * * IDialogCoreConfig: {@link IDialogCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * ButtonLayoutDisplay: {@link ButtonLayoutDisplay}\n * * ButtonMaker: {@link ButtonMaker}\n * * IDialogPublicResponse: {@link IDialogPublicResponse}\n * @category Popup open\n */\nexport { DialogInitializer };\n// endregion\n\n// region *** Imports for angular app.module ***\n/**\n * This is the main module of the library, it is crucial to be added within angular.app\n * imports as an example with optional argument, look: {@link IGlobalUserConfig}\n *\n * ```typescript\n * // app.module imports:\n * NgxAwesomePopupModule.forRoot({\n *     ColorList: {\n *            Primary  : '#ff9e00', // optional\n *            Secondary: '#989ea5', // optional\n *            Info     : '#2f8ee5', // optional\n *            Success  : '#3caea3', // optional\n *            Warning  : '#ffc107', // optional\n *            Danger   : '#e46464', // optional\n *            Light    : '#fbfbfb', // optional\n *            Dark     : '#343a40'  // optional\n *           }\n * })\n * ```\n * @category Imports for angular app.module\n */\nexport { NgxAwesomePopupModule } from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites dynamic dialog modal, its purpose is to load any angular component in\n * dialog window. Dynamic component means that user can evoke any Angular component in the popup just from typescript. Component view\n * is dynamically created with the library engine and there is no need to call any selector in HTML to create component view.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that is what will be in setup if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is called.\n * For implementation look: {@link IDialogUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *DialogConfigModule.forRoot({\n *     DialogCoreConfig: {\n *        Width        : '500px',\n *        ButtonPosition: 'right',\n *        LayoutType: DialogLayoutDisplay.INFO,\n *        LoaderComponent: // Any angular component class name can be included as a loader.\n *     },\n *     Buttons: [\n *        new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *        new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *     ],\n * })\n * ```\n * * DialogCoreConfig.LayoutType: {@link DialogLayoutDisplay}\n * * ButtonLayoutDisplay: {@link ButtonLayoutDisplay}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport { DialogConfigModule } from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites Confirm box dialog, its purpose is to show popup in a\n * small dialog window in the middle of the screen. User can provide title, message and include buttons.\n * Confirm box is available in predefined layout types (enums): {@link DialogLayoutDisplay}.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that's what will be used if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is evoked.\n * For implementation look: {@link IConfirmBoxUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *ConfirmBoxConfigModule.forRoot({\n *    ConfirmBoxCoreConfig: {\n *       Width: '700px',\n *       LayoutType: DialogLayoutDisplay.DANGER,\n *       ButtonPosition: 'center'\n *    },\n *    Dispatch: {  // Optional default dispatch object.\n *       Title: 'Default title',\n *       Message: 'Default message'\n *    },\n *    Buttons     : [\n *       new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *       new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *    ]\n * })\n * ```\n * * ConfirmBoxCoreConfig: {@link IConfirmBoxCoreConfig}\n * * Dispatch: {@link IDispatch}\n * * Buttons: {@link IButton}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport { ConfirmBoxConfigModule } from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites Toast notifications dialog, its purpose is to show toast popup in a\n * small dialog window in the corner of the screen. User can provide title and message and include buttons, or setup auto disappearing.\n * Toast notifications are available in predefined layout types (enums): {@link DialogLayoutDisplay}.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that's what will be used if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is evoked.\n * For implementation look: {@link IToastNotificationUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *ToastNotificationConfigModule.forRoot({\n *    ToastCoreConfig: {\n *       // Milliseconds it will be ignored if buttons are included.\n *       AutoCloseDelay: 3000\n *    },\n *    GlobalSettings: {\n *       // The number of toast notifications that can be shown at once.\n *       AllowedNotificationsAtOnce: 4\n *    },\n *    // Optional default dispatch object.\n *    Dispatch: {\n *      Title: 'Default title',\n *      Message: 'Default message'\n *   },\n *   Buttons: [\n *      new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *      new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *   ]\n *})\n * ```\n * * ToastCoreConfig: {@link IToastCoreConfig}\n * * GlobalSettings: {@link IGlobalToastSettings}\n * * Dispatch: {@link IDispatch}\n * * Buttons: {@link IButton}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport { ToastNotificationConfigModule } from './ngx-awesome-popup/ngx-awesome-popup.module';\n// endregion\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {fadeInOut as ɵh} from './ngx-awesome-popup/core/animations';\nexport {GlobalConfigService as ɵf} from './ngx-awesome-popup/core/global-config.service';\nexport {InsertionLoaderDirective as ɵj} from './ngx-awesome-popup/core/insertion-loader.directive';\nexport {InsertionDirective as ɵi} from './ngx-awesome-popup/core/insertion.directive';\nexport {DefaultLoaderComponent as ɵk} from './ngx-awesome-popup/default-loader/default-loader.component';\nexport {ConfirmBoxWrapperComponent as ɵn} from './ngx-awesome-popup/types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component';\nexport {ConfirmBoxBelonging as ɵe,ConfirmBoxSettings as ɵd} from './ngx-awesome-popup/types/confirm-box/core/classes';\nexport {ConfirmBoxConfigService as ɵp} from './ngx-awesome-popup/types/confirm-box/core/confirm-box-config.service';\nexport {ConfirmBoxService as ɵo} from './ngx-awesome-popup/types/confirm-box/core/confirm-box-service';\nexport {DialogSettings as ɵc} from './ngx-awesome-popup/types/dialog/core/classes';\nexport {DialogConfigService as ɵm} from './ngx-awesome-popup/types/dialog/core/dialog-config.service';\nexport {DialogService as ɵl} from './ngx-awesome-popup/types/dialog/core/dialog.service';\nexport {DialogWrapperComponent as ɵg} from './ngx-awesome-popup/types/dialog/dialog-wrapper/dialog-wrapper.component';\nexport {ToastNotificationBelonging as ɵb,ToastSettings as ɵa} from './ngx-awesome-popup/types/toast-notification/core/classes';\nexport {ToastNotificationConfigService as ɵu} from './ngx-awesome-popup/types/toast-notification/core/toast-notification-config.service';\nexport {ToastNotificationService as ɵt} from './ngx-awesome-popup/types/toast-notification/core/toast-notification.service';\nexport {WrapperAbstraction as ɵr} from './ngx-awesome-popup/types/toast-notification/core/wrapper-abstraction';\nexport {ToastNotificationSimpleWrapperComponent as ɵs} from './ngx-awesome-popup/types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nexport {ToastNotificationWrapperComponent as ɵq} from './ngx-awesome-popup/types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component';"],"names":[],"mappings":"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"}