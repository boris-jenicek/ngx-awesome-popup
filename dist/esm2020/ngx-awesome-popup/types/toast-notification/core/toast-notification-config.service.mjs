import { Inject, Injectable } from '@angular/core';
import { AppearanceAnimation, DialogLayoutDisplay, DisappearanceAnimation } from '../../../core/enums';
import { DataControl } from '../../../core/global-classes';
import { ToastCustomStyles, ToastSettings } from './classes';
import { ToastPositionEnum, ToastProgressBarEnum, ToastUserViewTypeEnum } from './enums';
import * as i0 from "@angular/core";
export class ToastNotificationConfigService {
    constructor(userConfig = {}) {
        this.userConfig = userConfig;
        this.dataControl = new DataControl();
        this.authorConfig = new ToastSettings();
        this.productionConfig = new ToastSettings();
        const userConfigBase = new ToastSettings();
        this.dataControl.copyValuesFrom(userConfig.toastCoreConfig, userConfigBase.toastCoreConfig);
        userConfig.toastCoreConfig = userConfigBase.toastCoreConfig;
        this.authorConfig.toastCoreConfig.buttonPosition = 'right';
        this.authorConfig.toastCoreConfig.textPosition = 'left';
        this.authorConfig.toastCoreConfig.toastPosition = ToastPositionEnum.TOP_RIGHT;
        this.authorConfig.toastCoreConfig.progressBar = ToastProgressBarEnum.INCREASE;
        this.authorConfig.toastCoreConfig.toastUserViewType = ToastUserViewTypeEnum.SIMPLE;
        this.authorConfig.toastCoreConfig.autoCloseDelay = 2500;
        this.authorConfig.toastCoreConfig.disableIcon = false;
        this.authorConfig.toastCoreConfig.allowHtmlMessage = true;
        this.authorConfig.toastCoreConfig.layoutType = DialogLayoutDisplay.NONE;
        this.authorConfig.globalSettings.allowedNotificationsAtOnce = 5;
        this.authorConfig.toastCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;
        this.authorConfig.toastCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;
        this.authorConfig.toastCoreConfig.customStyles = new ToastCustomStyles();
        this.authorConfig.toastCoreConfig.iconStyleClass = null;
        this.setResetGlobalToastConfig();
        this.dataControl.copyValuesFrom(this.authorConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);
        this.dataControl.copyValuesFrom(this.userConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);
    }
    setResetGlobalToastConfig(globalToastConfig) {
        this.dataControl.copyValuesFrom(this.authorConfig.globalSettings, this.productionConfig.globalSettings);
        this.dataControl.copyValuesFrom(globalToastConfig ? globalToastConfig : this.userConfig.globalSettings, this.productionConfig.globalSettings);
    }
}
ToastNotificationConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ToastNotificationConfigService, deps: [{ token: 'toastNotificationConfig' }], target: i0.ɵɵFactoryTarget.Injectable });
ToastNotificationConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ToastNotificationConfigService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ToastNotificationConfigService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: ['toastNotificationConfig']
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmd4LWF3ZXNvbWUtcG9wdXAvdHlwZXMvdG9hc3Qtbm90aWZpY2F0aW9uL2NvcmUvdG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzdELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7QUFNekYsTUFBTSxPQUFPLDhCQUE4QjtJQUt6QyxZQUVVLGFBQTJDLEVBQUU7UUFBN0MsZUFBVSxHQUFWLFVBQVUsQ0FBbUM7UUFOL0MsZ0JBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3hDLGlCQUFZLEdBQWlDLElBQUksYUFBYSxFQUFFLENBQUM7UUFDakUscUJBQWdCLEdBQWlDLElBQUksYUFBYSxFQUFFLENBQUM7UUFPbkUsTUFBTSxjQUFjLEdBQUcsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUUzQyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUU1RixVQUFVLENBQUMsZUFBZSxHQUFHLGNBQWMsQ0FBQyxlQUFlLENBQUM7UUFJNUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQztRQUMzRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDO1FBQ3hELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGFBQWEsR0FBRyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7UUFDOUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDLFFBQVEsQ0FBQztRQUM5RSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsR0FBRyxxQkFBcUIsQ0FBQyxNQUFNLENBQUM7UUFDbkYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUN4RCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMxRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1FBQ3hFLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLDBCQUEwQixHQUFHLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsT0FBTyxDQUFDO1FBQzVFLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFlBQVksR0FBRyxzQkFBc0IsQ0FBQyxRQUFRLENBQUM7UUFDakYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsWUFBWSxHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztRQUN6RSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBTXhELElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMxRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFMUcsQ0FBQztJQUVELHlCQUF5QixDQUFDLGlCQUF3QztRQUNoRSxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDeEcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQzdCLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQ3RFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQ3JDLENBQUM7SUFDSixDQUFDOzsySEFqRFUsOEJBQThCLGtCQU0vQix5QkFBeUI7K0hBTnhCLDhCQUE4QixjQUY3QixNQUFNOzJGQUVQLDhCQUE4QjtrQkFIMUMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OzBCQU9JLE1BQU07MkJBQUMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBlYXJhbmNlQW5pbWF0aW9uLCBEaWFsb2dMYXlvdXREaXNwbGF5LCBEaXNhcHBlYXJhbmNlQW5pbWF0aW9uIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9lbnVtcyc7XG5pbXBvcnQgeyBEYXRhQ29udHJvbCB9IGZyb20gJy4uLy4uLy4uL2NvcmUvZ2xvYmFsLWNsYXNzZXMnO1xuaW1wb3J0IHsgVG9hc3RDdXN0b21TdHlsZXMsIFRvYXN0U2V0dGluZ3MgfSBmcm9tICcuL2NsYXNzZXMnO1xuaW1wb3J0IHsgVG9hc3RQb3NpdGlvbkVudW0sIFRvYXN0UHJvZ3Jlc3NCYXJFbnVtLCBUb2FzdFVzZXJWaWV3VHlwZUVudW0gfSBmcm9tICcuL2VudW1zJztcbmltcG9ydCB7IElHbG9iYWxUb2FzdFNldHRpbmdzLCBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVG9hc3ROb3RpZmljYXRpb25Db25maWdTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBkYXRhQ29udHJvbCA9IG5ldyBEYXRhQ29udHJvbCgpO1xuICBhdXRob3JDb25maWc6IElUb2FzdE5vdGlmaWNhdGlvblVzZXJDb25maWcgPSBuZXcgVG9hc3RTZXR0aW5ncygpO1xuICBwcm9kdWN0aW9uQ29uZmlnOiBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnID0gbmV3IFRvYXN0U2V0dGluZ3MoKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KCd0b2FzdE5vdGlmaWNhdGlvbkNvbmZpZycpXG4gICAgcHJpdmF0ZSB1c2VyQ29uZmlnOiBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnID0ge31cbiAgKSB7XG4gICAgLy8gcmVnaW9uICoqKiB0b2FzdE5vdGlmaWNhdGlvbiB1c2VyQ29uZmlnICh1c2VyIGlucHV0IGFwcC1tb2R1bGUpICoqKlxuICAgIGNvbnN0IHVzZXJDb25maWdCYXNlID0gbmV3IFRvYXN0U2V0dGluZ3MoKTtcblxuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odXNlckNvbmZpZy50b2FzdENvcmVDb25maWcsIHVzZXJDb25maWdCYXNlLnRvYXN0Q29yZUNvbmZpZyk7IC8vIHRoaXMgd2lsbCBtYWtlIHN1cmUgdGhhdCBvYmplY3QgaGFzIHJpZ2h0IHByb3BlcnRpZXNcblxuICAgIHVzZXJDb25maWcudG9hc3RDb3JlQ29uZmlnID0gdXNlckNvbmZpZ0Jhc2UudG9hc3RDb3JlQ29uZmlnO1xuICAgIC8vIGVuZHJlZ2lvblxuXG4gICAgLy8gcmVnaW9uICoqKiBhdXRob3IgZGVmYXVsdCBjb25maWcgdmFsdWVzIChpZiB0aGVyZSBpcyBubyB1c2VyIGlucHV0KSAqKipcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuYnV0dG9uUG9zaXRpb24gPSAncmlnaHQnO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy50ZXh0UG9zaXRpb24gPSAnbGVmdCc7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLnRvYXN0UG9zaXRpb24gPSBUb2FzdFBvc2l0aW9uRW51bS5UT1BfUklHSFQ7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLnByb2dyZXNzQmFyID0gVG9hc3RQcm9ncmVzc0JhckVudW0uSU5DUkVBU0U7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLnRvYXN0VXNlclZpZXdUeXBlID0gVG9hc3RVc2VyVmlld1R5cGVFbnVtLlNJTVBMRTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuYXV0b0Nsb3NlRGVsYXkgPSAyNTAwO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5kaXNhYmxlSWNvbiA9IGZhbHNlO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5hbGxvd0h0bWxNZXNzYWdlID0gdHJ1ZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcubGF5b3V0VHlwZSA9IERpYWxvZ0xheW91dERpc3BsYXkuTk9ORTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5nbG9iYWxTZXR0aW5ncy5hbGxvd2VkTm90aWZpY2F0aW9uc0F0T25jZSA9IDU7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLmFuaW1hdGlvbkluID0gQXBwZWFyYW5jZUFuaW1hdGlvbi5aT09NX0lOO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5hbmltYXRpb25PdXQgPSBEaXNhcHBlYXJhbmNlQW5pbWF0aW9uLlpPT01fT1VUO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5jdXN0b21TdHlsZXMgPSBuZXcgVG9hc3RDdXN0b21TdHlsZXMoKTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuaWNvblN0eWxlQ2xhc3MgPSBudWxsO1xuXG4gICAgLy8gZW5kcmVnaW9uXG5cbiAgICAvLyByZWdpb24gKioqIFByb2R1Y3Rpb24gc2V0dXAgKioqXG5cbiAgICB0aGlzLnNldFJlc2V0R2xvYmFsVG9hc3RDb25maWcoKTtcbiAgICB0aGlzLmRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZywgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLnRvYXN0Q29yZUNvbmZpZyk7XG4gICAgdGhpcy5kYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh0aGlzLnVzZXJDb25maWcudG9hc3RDb3JlQ29uZmlnLCB0aGlzLnByb2R1Y3Rpb25Db25maWcudG9hc3RDb3JlQ29uZmlnKTtcbiAgICAvLyBlbmRyZWdpb25cbiAgfVxuXG4gIHNldFJlc2V0R2xvYmFsVG9hc3RDb25maWcoZ2xvYmFsVG9hc3RDb25maWc/OiBJR2xvYmFsVG9hc3RTZXR0aW5ncyk6IHZvaWQge1xuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odGhpcy5hdXRob3JDb25maWcuZ2xvYmFsU2V0dGluZ3MsIHRoaXMucHJvZHVjdGlvbkNvbmZpZy5nbG9iYWxTZXR0aW5ncyk7XG4gICAgdGhpcy5kYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbShcbiAgICAgIGdsb2JhbFRvYXN0Q29uZmlnID8gZ2xvYmFsVG9hc3RDb25maWcgOiB0aGlzLnVzZXJDb25maWcuZ2xvYmFsU2V0dGluZ3MsXG4gICAgICB0aGlzLnByb2R1Y3Rpb25Db25maWcuZ2xvYmFsU2V0dGluZ3NcbiAgICApO1xuICB9XG59XG4iXX0=