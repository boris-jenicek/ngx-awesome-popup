import { Inject, Injectable } from '@angular/core';
import { AppearanceAnimation, DialogLayoutDisplay, DisappearanceAnimation } from '../../../core/enums';
import { DataControl } from '../../../core/global-classes';
import { ToastCustomStyles, ToastSettings } from './classes';
import { ToastPositionEnum, ToastProgressBarEnum, ToastUserViewTypeEnum } from './enums';
import * as i0 from "@angular/core";
export class ToastNotificationConfigService {
    constructor(userConfig = {}) {
        this.userConfig = userConfig;
        this.dataControl = new DataControl();
        this.authorConfig = new ToastSettings();
        this.productionConfig = new ToastSettings();
        const userConfigBase = new ToastSettings();
        this.dataControl.copyValuesFrom(userConfig.toastCoreConfig, userConfigBase.toastCoreConfig);
        userConfig.toastCoreConfig = userConfigBase.toastCoreConfig;
        this.authorConfig.toastCoreConfig.buttonPosition = 'right';
        this.authorConfig.toastCoreConfig.textPosition = 'left';
        this.authorConfig.toastCoreConfig.toastPosition = ToastPositionEnum.TOP_RIGHT;
        this.authorConfig.toastCoreConfig.progressBar = ToastProgressBarEnum.INCREASE;
        this.authorConfig.toastCoreConfig.toastUserViewType = ToastUserViewTypeEnum.SIMPLE;
        this.authorConfig.toastCoreConfig.autoCloseDelay = 2500;
        this.authorConfig.toastCoreConfig.disableIcon = false;
        this.authorConfig.toastCoreConfig.allowHtmlMessage = true;
        this.authorConfig.toastCoreConfig.layoutType = DialogLayoutDisplay.NONE;
        this.authorConfig.globalSettings.allowedNotificationsAtOnce = 5;
        this.authorConfig.toastCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;
        this.authorConfig.toastCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;
        this.authorConfig.toastCoreConfig.customStyles = new ToastCustomStyles();
        this.authorConfig.toastCoreConfig.iconStyleClass = null;
        this.setResetGlobalToastConfig();
        this.dataControl.copyValuesFrom(this.authorConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);
        this.dataControl.copyValuesFrom(this.userConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);
    }
    setResetGlobalToastConfig(globalToastConfig) {
        this.dataControl.copyValuesFrom(this.authorConfig.globalSettings, this.productionConfig.globalSettings);
        this.dataControl.copyValuesFrom(globalToastConfig ? globalToastConfig : this.userConfig.globalSettings, this.productionConfig.globalSettings);
    }
}
ToastNotificationConfigService.ɵfac = function ToastNotificationConfigService_Factory(t) { return new (t || ToastNotificationConfigService)(i0.ɵɵinject('toastNotificationConfig')); };
ToastNotificationConfigService.ɵprov = i0.ɵɵdefineInjectable({ token: ToastNotificationConfigService, factory: ToastNotificationConfigService.ɵfac, providedIn: 'root' });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ToastNotificationConfigService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: ['toastNotificationConfig']
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmd4LWF3ZXNvbWUtcG9wdXAvdHlwZXMvdG9hc3Qtbm90aWZpY2F0aW9uL2NvcmUvdG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzdELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7QUFNekYsTUFBTSxPQUFPLDhCQUE4QjtJQUt6QyxZQUVVLGFBQTJDLEVBQUU7UUFBN0MsZUFBVSxHQUFWLFVBQVUsQ0FBbUM7UUFOL0MsZ0JBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3hDLGlCQUFZLEdBQWlDLElBQUksYUFBYSxFQUFFLENBQUM7UUFDakUscUJBQWdCLEdBQWlDLElBQUksYUFBYSxFQUFFLENBQUM7UUFPbkUsTUFBTSxjQUFjLEdBQUcsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUUzQyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUU1RixVQUFVLENBQUMsZUFBZSxHQUFHLGNBQWMsQ0FBQyxlQUFlLENBQUM7UUFJNUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQztRQUMzRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDO1FBQ3hELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGFBQWEsR0FBRyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7UUFDOUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDLFFBQVEsQ0FBQztRQUM5RSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsR0FBRyxxQkFBcUIsQ0FBQyxNQUFNLENBQUM7UUFDbkYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUN4RCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMxRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1FBQ3hFLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLDBCQUEwQixHQUFHLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsT0FBTyxDQUFDO1FBQzVFLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFlBQVksR0FBRyxzQkFBc0IsQ0FBQyxRQUFRLENBQUM7UUFDakYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsWUFBWSxHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztRQUN6RSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBTXhELElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMxRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLENBQUM7SUFFMUcsQ0FBQztJQUVELHlCQUF5QixDQUFDLGlCQUF3QztRQUNoRSxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDeEcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQzdCLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQ3RFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQ3JDLENBQUM7SUFDSixDQUFDOzs0R0FqRFUsOEJBQThCLGNBTS9CLHlCQUF5QjtzRUFOeEIsOEJBQThCLFdBQTlCLDhCQUE4QixtQkFGN0IsTUFBTTt1RkFFUCw4QkFBOEI7Y0FIMUMsVUFBVTtlQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COztzQkFPSSxNQUFNO3VCQUFDLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwZWFyYW5jZUFuaW1hdGlvbiwgRGlhbG9nTGF5b3V0RGlzcGxheSwgRGlzYXBwZWFyYW5jZUFuaW1hdGlvbiB9IGZyb20gJy4uLy4uLy4uL2NvcmUvZW51bXMnO1xuaW1wb3J0IHsgRGF0YUNvbnRyb2wgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2dsb2JhbC1jbGFzc2VzJztcbmltcG9ydCB7IFRvYXN0Q3VzdG9tU3R5bGVzLCBUb2FzdFNldHRpbmdzIH0gZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCB7IFRvYXN0UG9zaXRpb25FbnVtLCBUb2FzdFByb2dyZXNzQmFyRW51bSwgVG9hc3RVc2VyVmlld1R5cGVFbnVtIH0gZnJvbSAnLi9lbnVtcyc7XG5pbXBvcnQgeyBJR2xvYmFsVG9hc3RTZXR0aW5ncywgSVRvYXN0Tm90aWZpY2F0aW9uVXNlckNvbmZpZyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFRvYXN0Tm90aWZpY2F0aW9uQ29uZmlnU2VydmljZSB7XG4gIHByaXZhdGUgZGF0YUNvbnRyb2wgPSBuZXcgRGF0YUNvbnRyb2woKTtcbiAgYXV0aG9yQ29uZmlnOiBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnID0gbmV3IFRvYXN0U2V0dGluZ3MoKTtcbiAgcHJvZHVjdGlvbkNvbmZpZzogSVRvYXN0Tm90aWZpY2F0aW9uVXNlckNvbmZpZyA9IG5ldyBUb2FzdFNldHRpbmdzKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdCgndG9hc3ROb3RpZmljYXRpb25Db25maWcnKVxuICAgIHByaXZhdGUgdXNlckNvbmZpZzogSVRvYXN0Tm90aWZpY2F0aW9uVXNlckNvbmZpZyA9IHt9XG4gICkge1xuICAgIC8vIHJlZ2lvbiAqKiogdG9hc3ROb3RpZmljYXRpb24gdXNlckNvbmZpZyAodXNlciBpbnB1dCBhcHAtbW9kdWxlKSAqKipcbiAgICBjb25zdCB1c2VyQ29uZmlnQmFzZSA9IG5ldyBUb2FzdFNldHRpbmdzKCk7XG5cbiAgICB0aGlzLmRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHVzZXJDb25maWcudG9hc3RDb3JlQ29uZmlnLCB1c2VyQ29uZmlnQmFzZS50b2FzdENvcmVDb25maWcpOyAvLyB0aGlzIHdpbGwgbWFrZSBzdXJlIHRoYXQgb2JqZWN0IGhhcyByaWdodCBwcm9wZXJ0aWVzXG5cbiAgICB1c2VyQ29uZmlnLnRvYXN0Q29yZUNvbmZpZyA9IHVzZXJDb25maWdCYXNlLnRvYXN0Q29yZUNvbmZpZztcbiAgICAvLyBlbmRyZWdpb25cblxuICAgIC8vIHJlZ2lvbiAqKiogYXV0aG9yIGRlZmF1bHQgY29uZmlnIHZhbHVlcyAoaWYgdGhlcmUgaXMgbm8gdXNlciBpbnB1dCkgKioqXG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLmJ1dHRvblBvc2l0aW9uID0gJ3JpZ2h0JztcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcudGV4dFBvc2l0aW9uID0gJ2xlZnQnO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy50b2FzdFBvc2l0aW9uID0gVG9hc3RQb3NpdGlvbkVudW0uVE9QX1JJR0hUO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5wcm9ncmVzc0JhciA9IFRvYXN0UHJvZ3Jlc3NCYXJFbnVtLklOQ1JFQVNFO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy50b2FzdFVzZXJWaWV3VHlwZSA9IFRvYXN0VXNlclZpZXdUeXBlRW51bS5TSU1QTEU7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLmF1dG9DbG9zZURlbGF5ID0gMjUwMDtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuZGlzYWJsZUljb24gPSBmYWxzZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuYWxsb3dIdG1sTWVzc2FnZSA9IHRydWU7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLmxheW91dFR5cGUgPSBEaWFsb2dMYXlvdXREaXNwbGF5Lk5PTkU7XG4gICAgdGhpcy5hdXRob3JDb25maWcuZ2xvYmFsU2V0dGluZ3MuYWxsb3dlZE5vdGlmaWNhdGlvbnNBdE9uY2UgPSA1O1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLnRvYXN0Q29yZUNvbmZpZy5hbmltYXRpb25JbiA9IEFwcGVhcmFuY2VBbmltYXRpb24uWk9PTV9JTjtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuYW5pbWF0aW9uT3V0ID0gRGlzYXBwZWFyYW5jZUFuaW1hdGlvbi5aT09NX09VVDtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcuY3VzdG9tU3R5bGVzID0gbmV3IFRvYXN0Q3VzdG9tU3R5bGVzKCk7XG4gICAgdGhpcy5hdXRob3JDb25maWcudG9hc3RDb3JlQ29uZmlnLmljb25TdHlsZUNsYXNzID0gbnVsbDtcblxuICAgIC8vIGVuZHJlZ2lvblxuXG4gICAgLy8gcmVnaW9uICoqKiBQcm9kdWN0aW9uIHNldHVwICoqKlxuXG4gICAgdGhpcy5zZXRSZXNldEdsb2JhbFRvYXN0Q29uZmlnKCk7XG4gICAgdGhpcy5kYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh0aGlzLmF1dGhvckNvbmZpZy50b2FzdENvcmVDb25maWcsIHRoaXMucHJvZHVjdGlvbkNvbmZpZy50b2FzdENvcmVDb25maWcpO1xuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odGhpcy51c2VyQ29uZmlnLnRvYXN0Q29yZUNvbmZpZywgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLnRvYXN0Q29yZUNvbmZpZyk7XG4gICAgLy8gZW5kcmVnaW9uXG4gIH1cblxuICBzZXRSZXNldEdsb2JhbFRvYXN0Q29uZmlnKGdsb2JhbFRvYXN0Q29uZmlnPzogSUdsb2JhbFRvYXN0U2V0dGluZ3MpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHRoaXMuYXV0aG9yQ29uZmlnLmdsb2JhbFNldHRpbmdzLCB0aGlzLnByb2R1Y3Rpb25Db25maWcuZ2xvYmFsU2V0dGluZ3MpO1xuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20oXG4gICAgICBnbG9iYWxUb2FzdENvbmZpZyA/IGdsb2JhbFRvYXN0Q29uZmlnIDogdGhpcy51c2VyQ29uZmlnLmdsb2JhbFNldHRpbmdzLFxuICAgICAgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLmdsb2JhbFNldHRpbmdzXG4gICAgKTtcbiAgfVxufVxuIl19