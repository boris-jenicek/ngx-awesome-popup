import { Inject, Injectable } from '@angular/core';
import { AppearanceAnimation, DialogLayoutDisplay, DisappearanceAnimation } from '../../../core/enums';
import { DataControl } from '../../../core/global-classes';
import { ConfirmBoxCustomStyles, ConfirmBoxSettings } from './classes';
import * as i0 from "@angular/core";
export class ConfirmBoxConfigService {
    constructor(userConfig = {}) {
        this.userConfig = userConfig;
        this.authorConfig = new ConfirmBoxSettings();
        this.productionConfig = new ConfirmBoxSettings();
        const userConfigBase = new ConfirmBoxSettings();
        const dataControl = new DataControl();
        dataControl.copyValuesFrom(userConfig.confirmBoxCoreConfig, userConfigBase.confirmBoxCoreConfig);
        userConfig.confirmBoxCoreConfig = userConfigBase.confirmBoxCoreConfig;
        this.authorConfig.confirmBoxCoreConfig.width = 'auto';
        this.authorConfig.confirmBoxCoreConfig.height = 'auto';
        this.authorConfig.confirmBoxCoreConfig.buttonPosition = 'center';
        this.authorConfig.confirmBoxCoreConfig.confirmLabel = 'Confirm';
        this.authorConfig.confirmBoxCoreConfig.declineLabel = 'Decline';
        this.authorConfig.confirmBoxCoreConfig.disableIcon = false;
        this.authorConfig.confirmBoxCoreConfig.allowHtmlMessage = false;
        this.authorConfig.confirmBoxCoreConfig.layoutType = DialogLayoutDisplay.NONE;
        this.authorConfig.confirmBoxCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;
        this.authorConfig.confirmBoxCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;
        this.authorConfig.confirmBoxCoreConfig.customStyles = new ConfirmBoxCustomStyles();
        this.authorConfig.confirmBoxCoreConfig.iconStyleClass = null;
        dataControl.copyValuesFrom(this.authorConfig.confirmBoxCoreConfig, this.productionConfig.confirmBoxCoreConfig);
        dataControl.copyValuesFrom(userConfig.confirmBoxCoreConfig, this.productionConfig.confirmBoxCoreConfig);
    }
}
ConfirmBoxConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ConfirmBoxConfigService, deps: [{ token: 'confirmBoxConfig' }], target: i0.ɵɵFactoryTarget.Injectable });
ConfirmBoxConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ConfirmBoxConfigService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: ConfirmBoxConfigService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: ['confirmBoxConfig']
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1ib3gtY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9uZ3gtYXdlc29tZS1wb3B1cC90eXBlcy9jb25maXJtLWJveC9jb3JlL2NvbmZpcm0tYm94LWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBTXZFLE1BQU0sT0FBTyx1QkFBdUI7SUFJbEMsWUFFVSxhQUFvQyxFQUFFO1FBQXRDLGVBQVUsR0FBVixVQUFVLENBQTRCO1FBTGhELGlCQUFZLEdBQTBCLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUMvRCxxQkFBZ0IsR0FBMEIsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1FBT2pFLE1BQU0sY0FBYyxHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUNoRCxNQUFNLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3RDLFdBQVcsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLG9CQUFvQixFQUFFLGNBQWMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ2pHLFVBQVUsQ0FBQyxvQkFBb0IsR0FBRyxjQUFjLENBQUMsb0JBQW9CLENBQUM7UUFJdEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUN2RCxJQUFJLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUM7UUFDakUsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDM0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDaEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1FBQzdFLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztRQUNqRixJQUFJLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLFlBQVksR0FBRyxzQkFBc0IsQ0FBQyxRQUFRLENBQUM7UUFDdEYsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLEdBQUcsSUFBSSxzQkFBc0IsRUFBRSxDQUFDO1FBQ25GLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUs3RCxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDL0csV0FBVyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFFMUcsQ0FBQzs7b0hBbkNVLHVCQUF1QixrQkFLeEIsa0JBQWtCO3dIQUxqQix1QkFBdUIsY0FGdEIsTUFBTTsyRkFFUCx1QkFBdUI7a0JBSG5DLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFNSSxNQUFNOzJCQUFDLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwZWFyYW5jZUFuaW1hdGlvbiwgRGlhbG9nTGF5b3V0RGlzcGxheSwgRGlzYXBwZWFyYW5jZUFuaW1hdGlvbiB9IGZyb20gJy4uLy4uLy4uL2NvcmUvZW51bXMnO1xuaW1wb3J0IHsgRGF0YUNvbnRyb2wgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2dsb2JhbC1jbGFzc2VzJztcbmltcG9ydCB7IENvbmZpcm1Cb3hDdXN0b21TdHlsZXMsIENvbmZpcm1Cb3hTZXR0aW5ncyB9IGZyb20gJy4vY2xhc3Nlcyc7XG5pbXBvcnQgeyBJQ29uZmlybUJveFVzZXJDb25maWcgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBDb25maXJtQm94Q29uZmlnU2VydmljZSB7XG4gIGF1dGhvckNvbmZpZzogSUNvbmZpcm1Cb3hVc2VyQ29uZmlnID0gbmV3IENvbmZpcm1Cb3hTZXR0aW5ncygpO1xuICBwcm9kdWN0aW9uQ29uZmlnOiBJQ29uZmlybUJveFVzZXJDb25maWcgPSBuZXcgQ29uZmlybUJveFNldHRpbmdzKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdCgnY29uZmlybUJveENvbmZpZycpXG4gICAgcHJpdmF0ZSB1c2VyQ29uZmlnOiBJQ29uZmlybUJveFVzZXJDb25maWcgPSB7fVxuICApIHtcbiAgICAvLyByZWdpb24gKioqIGNvbmZpcm1Cb3ggdXNlckNvbmZpZyAodXNlciBpbnB1dCBhcHAtbW9kdWxlKSAqKipcbiAgICBjb25zdCB1c2VyQ29uZmlnQmFzZSA9IG5ldyBDb25maXJtQm94U2V0dGluZ3MoKTtcbiAgICBjb25zdCBkYXRhQ29udHJvbCA9IG5ldyBEYXRhQ29udHJvbCgpO1xuICAgIGRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHVzZXJDb25maWcuY29uZmlybUJveENvcmVDb25maWcsIHVzZXJDb25maWdCYXNlLmNvbmZpcm1Cb3hDb3JlQ29uZmlnKTsgLy8gdGhpcyB3aWxsIG1ha2Ugc3VyZSB0aGF0IG9iamVjdCBoYXMgcmlnaHQgcHJvcGVydGllc1xuICAgIHVzZXJDb25maWcuY29uZmlybUJveENvcmVDb25maWcgPSB1c2VyQ29uZmlnQmFzZS5jb25maXJtQm94Q29yZUNvbmZpZztcbiAgICAvLyBlbmRyZWdpb25cblxuICAgIC8vIHJlZ2lvbiAqKiogYXV0aG9yIGRlZmF1bHQgY29uZmlnIHZhbHVlcyAoaWYgdGhlcmUgaXMgbm8gdXNlciBpbnB1dCkgKioqXG4gICAgdGhpcy5hdXRob3JDb25maWcuY29uZmlybUJveENvcmVDb25maWcud2lkdGggPSAnYXV0byc7XG4gICAgdGhpcy5hdXRob3JDb25maWcuY29uZmlybUJveENvcmVDb25maWcuaGVpZ2h0ID0gJ2F1dG8nO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLmJ1dHRvblBvc2l0aW9uID0gJ2NlbnRlcic7XG4gICAgdGhpcy5hdXRob3JDb25maWcuY29uZmlybUJveENvcmVDb25maWcuY29uZmlybUxhYmVsID0gJ0NvbmZpcm0nO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLmRlY2xpbmVMYWJlbCA9ICdEZWNsaW5lJztcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5jb25maXJtQm94Q29yZUNvbmZpZy5kaXNhYmxlSWNvbiA9IGZhbHNlO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLmFsbG93SHRtbE1lc3NhZ2UgPSBmYWxzZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5jb25maXJtQm94Q29yZUNvbmZpZy5sYXlvdXRUeXBlID0gRGlhbG9nTGF5b3V0RGlzcGxheS5OT05FO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLmFuaW1hdGlvbkluID0gQXBwZWFyYW5jZUFuaW1hdGlvbi5aT09NX0lOO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLmFuaW1hdGlvbk91dCA9IERpc2FwcGVhcmFuY2VBbmltYXRpb24uWk9PTV9PVVQ7XG4gICAgdGhpcy5hdXRob3JDb25maWcuY29uZmlybUJveENvcmVDb25maWcuY3VzdG9tU3R5bGVzID0gbmV3IENvbmZpcm1Cb3hDdXN0b21TdHlsZXMoKTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5jb25maXJtQm94Q29yZUNvbmZpZy5pY29uU3R5bGVDbGFzcyA9IG51bGw7XG5cbiAgICAvLyBlbmRyZWdpb25cblxuICAgIC8vIHJlZ2lvbiAqKiogUHJvZHVjdGlvbiBzZXR1cCAqKipcbiAgICBkYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh0aGlzLmF1dGhvckNvbmZpZy5jb25maXJtQm94Q29yZUNvbmZpZywgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnKTtcbiAgICBkYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh1c2VyQ29uZmlnLmNvbmZpcm1Cb3hDb3JlQ29uZmlnLCB0aGlzLnByb2R1Y3Rpb25Db25maWcuY29uZmlybUJveENvcmVDb25maWcpO1xuICAgIC8vIGVuZHJlZ2lvblxuICB9XG59XG4iXX0=