import { Inject, Injectable } from '@angular/core';
import { AppearanceAnimation, DialogLayoutDisplay, DisappearanceAnimation } from '../../../core/enums';
import { DataControl } from '../../../core/global-classes';
import { DefaultLoaderComponent } from '../../../default-loader/default-loader.component';
import { DialogCustomStyles, DialogSettings } from './classes';
import * as i0 from "@angular/core";
import * as i1 from "../../../core/global-config.service";
export class DialogConfigService {
    constructor(userConfig = {}, gConfigService) {
        this.userConfig = userConfig;
        this.gConfigService = gConfigService;
        this.authorConfig = new DialogSettings();
        this.productionConfig = new DialogSettings();
        const userConfigBase = new DialogSettings();
        const dataControl = new DataControl();
        dataControl.copyValuesFrom(userConfig.dialogCoreConfig, userConfigBase.dialogCoreConfig);
        userConfig.dialogCoreConfig = userConfigBase.dialogCoreConfig;
        if (userConfig.dialogCoreConfig.loaderComponent !== null) {
            userConfig.dialogCoreConfig.displayLoader = userConfig.dialogCoreConfig.displayLoader === null;
        }
        this.authorConfig.dialogCoreConfig.width = 'auto';
        this.authorConfig.dialogCoreConfig.height = 'auto';
        this.authorConfig.dialogCoreConfig.hideScrollbar = false;
        this.authorConfig.dialogCoreConfig.escapeKeyClose = false;
        this.authorConfig.dialogCoreConfig.buttonPosition = 'right';
        this.authorConfig.dialogCoreConfig.displayLoader = false;
        this.authorConfig.dialogCoreConfig.fullScreen = false;
        this.authorConfig.dialogCoreConfig.layoutType = DialogLayoutDisplay.NONE;
        this.authorConfig.dialogCoreConfig.loaderComponent = DefaultLoaderComponent;
        this.authorConfig.dialogCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;
        this.authorConfig.dialogCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;
        this.authorConfig.dialogCoreConfig.customStyles = new DialogCustomStyles();
        dataControl.copyValuesFrom(this.authorConfig.dialogCoreConfig, this.productionConfig.dialogCoreConfig);
        dataControl.copyValuesFrom(userConfig.dialogCoreConfig, this.productionConfig.dialogCoreConfig);
    }
}
DialogConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: DialogConfigService, deps: [{ token: 'dialogConfig' }, { token: i1.GlobalConfigService }], target: i0.ɵɵFactoryTarget.Injectable });
DialogConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: DialogConfigService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.2", ngImport: i0, type: DialogConfigService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: ['dialogConfig']
                }] }, { type: i1.GlobalConfigService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmd4LWF3ZXNvbWUtcG9wdXAvdHlwZXMvZGlhbG9nL2NvcmUvZGlhbG9nLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUUzRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMxRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7QUFNL0QsTUFBTSxPQUFPLG1CQUFtQjtJQUk5QixZQUVVLGFBQWdDLEVBQUUsRUFDbEMsY0FBbUM7UUFEbkMsZUFBVSxHQUFWLFVBQVUsQ0FBd0I7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQXFCO1FBTjdDLGlCQUFZLEdBQXNCLElBQUksY0FBYyxFQUFFLENBQUM7UUFDdkQscUJBQWdCLEdBQXNCLElBQUksY0FBYyxFQUFFLENBQUM7UUFRekQsTUFBTSxjQUFjLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztRQUM1QyxNQUFNLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3RDLFdBQVcsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLGdCQUFnQixFQUFFLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3pGLFVBQVUsQ0FBQyxnQkFBZ0IsR0FBRyxjQUFjLENBQUMsZ0JBQWdCLENBQUM7UUFFOUQsSUFBSSxVQUFVLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxLQUFLLElBQUksRUFBRTtZQUN4RCxVQUFVLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxHQUFHLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEtBQUssSUFBSSxDQUFDO1NBQ2hHO1FBSUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQ2xELElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNuRCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDekQsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1FBQzFELElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQztRQUM1RCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDekQsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxHQUFHLG1CQUFtQixDQUFDLElBQUksQ0FBQztRQUN6RSxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsR0FBRyxzQkFBc0IsQ0FBQztRQUM1RSxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsR0FBRyxtQkFBbUIsQ0FBQyxPQUFPLENBQUM7UUFDN0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEdBQUcsc0JBQXNCLENBQUMsUUFBUSxDQUFDO1FBQ2xGLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUkzRSxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDdkcsV0FBVyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFTbEcsQ0FBQzs7Z0hBOUNVLG1CQUFtQixrQkFLcEIsY0FBYztvSEFMYixtQkFBbUIsY0FGbEIsTUFBTTsyRkFFUCxtQkFBbUI7a0JBSC9CLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzswQkFNSSxNQUFNOzJCQUFDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcGVhcmFuY2VBbmltYXRpb24sIERpYWxvZ0xheW91dERpc3BsYXksIERpc2FwcGVhcmFuY2VBbmltYXRpb24gfSBmcm9tICcuLi8uLi8uLi9jb3JlL2VudW1zJztcbmltcG9ydCB7IERhdGFDb250cm9sIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9nbG9iYWwtY2xhc3Nlcyc7XG5pbXBvcnQgeyBHbG9iYWxDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9nbG9iYWwtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGVmYXVsdExvYWRlckNvbXBvbmVudCB9IGZyb20gJy4uLy4uLy4uL2RlZmF1bHQtbG9hZGVyL2RlZmF1bHQtbG9hZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEaWFsb2dDdXN0b21TdHlsZXMsIERpYWxvZ1NldHRpbmdzIH0gZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCB7IElEaWFsb2dVc2VyQ29uZmlnIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGlhbG9nQ29uZmlnU2VydmljZSB7XG4gIGF1dGhvckNvbmZpZzogSURpYWxvZ1VzZXJDb25maWcgPSBuZXcgRGlhbG9nU2V0dGluZ3MoKTtcbiAgcHJvZHVjdGlvbkNvbmZpZzogSURpYWxvZ1VzZXJDb25maWcgPSBuZXcgRGlhbG9nU2V0dGluZ3MoKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KCdkaWFsb2dDb25maWcnKVxuICAgIHByaXZhdGUgdXNlckNvbmZpZzogSURpYWxvZ1VzZXJDb25maWcgPSB7fSxcbiAgICBwcml2YXRlIGdDb25maWdTZXJ2aWNlOiBHbG9iYWxDb25maWdTZXJ2aWNlXG4gICkge1xuICAgIC8vIHJlZ2lvbiAqKiogZGlhbG9nIHVzZXJDb25maWcgKHVzZXIgaW5wdXQgYXBwLW1vZHVsZSkgKioqXG4gICAgY29uc3QgdXNlckNvbmZpZ0Jhc2UgPSBuZXcgRGlhbG9nU2V0dGluZ3MoKTtcbiAgICBjb25zdCBkYXRhQ29udHJvbCA9IG5ldyBEYXRhQ29udHJvbCgpO1xuICAgIGRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHVzZXJDb25maWcuZGlhbG9nQ29yZUNvbmZpZywgdXNlckNvbmZpZ0Jhc2UuZGlhbG9nQ29yZUNvbmZpZyk7IC8vIHRoaXMgd2lsbCBtYWtlIHN1cmUgdGhhdCBvYmplY3QgaGFzIHJpZ2h0IHByb3BlcnRpZXNcbiAgICB1c2VyQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcgPSB1c2VyQ29uZmlnQmFzZS5kaWFsb2dDb3JlQ29uZmlnO1xuXG4gICAgaWYgKHVzZXJDb25maWcuZGlhbG9nQ29yZUNvbmZpZy5sb2FkZXJDb21wb25lbnQgIT09IG51bGwpIHtcbiAgICAgIHVzZXJDb25maWcuZGlhbG9nQ29yZUNvbmZpZy5kaXNwbGF5TG9hZGVyID0gdXNlckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLmRpc3BsYXlMb2FkZXIgPT09IG51bGw7XG4gICAgfVxuICAgIC8vIGVuZHJlZ2lvblxuXG4gICAgLy8gcmVnaW9uICoqKiBhdXRob3IgZGVmYXVsdCBjb25maWcgdmFsdWVzIChpZiB0aGVyZSBpcyBubyB1c2VyIGlucHV0KSAqKipcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLndpZHRoID0gJ2F1dG8nO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcuaGVpZ2h0ID0gJ2F1dG8nO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcuaGlkZVNjcm9sbGJhciA9IGZhbHNlO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcuZXNjYXBlS2V5Q2xvc2UgPSBmYWxzZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLmJ1dHRvblBvc2l0aW9uID0gJ3JpZ2h0JztcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLmRpc3BsYXlMb2FkZXIgPSBmYWxzZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLmZ1bGxTY3JlZW4gPSBmYWxzZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLmxheW91dFR5cGUgPSBEaWFsb2dMYXlvdXREaXNwbGF5Lk5PTkU7XG4gICAgdGhpcy5hdXRob3JDb25maWcuZGlhbG9nQ29yZUNvbmZpZy5sb2FkZXJDb21wb25lbnQgPSBEZWZhdWx0TG9hZGVyQ29tcG9uZW50O1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcuYW5pbWF0aW9uSW4gPSBBcHBlYXJhbmNlQW5pbWF0aW9uLlpPT01fSU47XG4gICAgdGhpcy5hdXRob3JDb25maWcuZGlhbG9nQ29yZUNvbmZpZy5hbmltYXRpb25PdXQgPSBEaXNhcHBlYXJhbmNlQW5pbWF0aW9uLlpPT01fT1VUO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLmRpYWxvZ0NvcmVDb25maWcuY3VzdG9tU3R5bGVzID0gbmV3IERpYWxvZ0N1c3RvbVN0eWxlcygpO1xuXG4gICAgLy8gZW5kcmVnaW9uXG5cbiAgICBkYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh0aGlzLmF1dGhvckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLCB0aGlzLnByb2R1Y3Rpb25Db25maWcuZGlhbG9nQ29yZUNvbmZpZyk7XG4gICAgZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odXNlckNvbmZpZy5kaWFsb2dDb3JlQ29uZmlnLCB0aGlzLnByb2R1Y3Rpb25Db25maWcuZGlhbG9nQ29yZUNvbmZpZyk7XG5cbiAgICAvLyBidXR0b25zXG4gICAgLyppZih1c2VyQ29uZmlnLmJ1dHRvbnMpe1xuXHRcdFx0dGhpcy5jb25maWcuYnV0dG9ucy5wdXNoKFxuXHRcdFx0XHRuZXcgQnV0dG9uTWFrZXIoJ09rJywgJ29rJywgQnV0dG9uTGF5b3V0RGlzcGxheS5QUklNQVJZKVxuXHRcdFx0XHQsbmV3IEJ1dHRvbk1ha2VyKCdDYW5jZWwnLCAnY2FuY2VsJywgQnV0dG9uTGF5b3V0RGlzcGxheS5TRUNPTkRBUlkpXG5cdFx0XHQpO1xuXHRcdH0qL1xuICB9XG59XG4iXX0=