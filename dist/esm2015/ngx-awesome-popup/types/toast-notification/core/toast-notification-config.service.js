import { Inject, Injectable } from '@angular/core';
import { AppearanceAnimation, DialogLayoutDisplay, DisappearanceAnimation } from '../../../core/enums';
import { DataControl } from '../../../core/global-classes';
import { ToastCustomStyles, ToastSettings } from './classes';
import { ToastPositionEnum, ToastProgressBarEnum, ToastUserViewTypeEnum } from './enums';
import * as i0 from "@angular/core";
export class ToastNotificationConfigService {
    constructor(userConfig = {}) {
        this.userConfig = userConfig;
        this.authorConfig = new ToastSettings();
        this.productionConfig = new ToastSettings();
        this.dataControl = new DataControl();
        // region *** toastNotification userConfig (user input app-module) ***
        const userConfigBase = new ToastSettings();
        this.dataControl.copyValuesFrom(userConfig.ToastCoreConfig, userConfigBase.ToastCoreConfig); // this will make sure that object has right properties
        userConfig.ToastCoreConfig = userConfigBase.ToastCoreConfig;
        // endregion
        // region *** author default config values (if there is no user input) ***
        this.authorConfig.ToastCoreConfig.ButtonPosition = 'right';
        this.authorConfig.ToastCoreConfig.TextPosition = 'left';
        this.authorConfig.ToastCoreConfig.ToastPosition = ToastPositionEnum.TOP_RIGHT;
        this.authorConfig.ToastCoreConfig.ProgressBar = ToastProgressBarEnum.INCREASE;
        this.authorConfig.ToastCoreConfig.ToastUserViewType = ToastUserViewTypeEnum.SIMPLE;
        this.authorConfig.ToastCoreConfig.AutoCloseDelay = 2500;
        this.authorConfig.ToastCoreConfig.DisableIcon = false;
        this.authorConfig.ToastCoreConfig.AllowHTMLMessage = true;
        this.authorConfig.ToastCoreConfig.LayoutType = DialogLayoutDisplay.NONE;
        this.authorConfig.GlobalSettings.AllowedNotificationsAtOnce = 5;
        this.authorConfig.ToastCoreConfig.AnimationIn = AppearanceAnimation.ZOOM_IN;
        this.authorConfig.ToastCoreConfig.AnimationOut = DisappearanceAnimation.ZOOM_OUT;
        this.authorConfig.ToastCoreConfig.CustomStyles = new ToastCustomStyles();
        // endregion
        // region *** Production setup ***
        this.setResetGlobalToastConfig();
        this.dataControl.copyValuesFrom(this.authorConfig.ToastCoreConfig, this.productionConfig.ToastCoreConfig);
        this.dataControl.copyValuesFrom(this.userConfig.ToastCoreConfig, this.productionConfig.ToastCoreConfig);
        // endregion
    }
    setResetGlobalToastConfig(globalToastConfig) {
        this.dataControl.copyValuesFrom(this.authorConfig.GlobalSettings, this.productionConfig.GlobalSettings);
        this.dataControl.copyValuesFrom(globalToastConfig ? globalToastConfig : this.userConfig.GlobalSettings, this.productionConfig.GlobalSettings);
    }
}
ToastNotificationConfigService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ToastNotificationConfigService_Factory() { return new ToastNotificationConfigService(i0.ɵɵinject("toastNotificationConfig")); }, token: ToastNotificationConfigService, providedIn: "root" });
ToastNotificationConfigService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
ToastNotificationConfigService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: ['toastNotificationConfig',] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbmd4LWF3ZXNvbWUtcG9wdXAvdHlwZXMvdG9hc3Qtbm90aWZpY2F0aW9uL2NvcmUvdG9hc3Qtbm90aWZpY2F0aW9uLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzdELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7QUFNekYsTUFBTSxPQUFPLDhCQUE4QjtJQUt6QyxZQUVVLGFBQTJDLEVBQUU7UUFBN0MsZUFBVSxHQUFWLFVBQVUsQ0FBbUM7UUFOdkQsaUJBQVksR0FBaUMsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUNqRSxxQkFBZ0IsR0FBaUMsSUFBSSxhQUFhLEVBQUUsQ0FBQztRQUM3RCxnQkFBVyxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7UUFNdEMsc0VBQXNFO1FBQ3RFLE1BQU0sY0FBYyxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7UUFFM0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxjQUFjLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyx1REFBdUQ7UUFFcEosVUFBVSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUMsZUFBZSxDQUFDO1FBQzVELFlBQVk7UUFFWiwwRUFBMEU7UUFDMUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQztRQUMzRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDO1FBQ3hELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGFBQWEsR0FBRyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7UUFDOUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsV0FBVyxHQUFHLG9CQUFvQixDQUFDLFFBQVEsQ0FBQztRQUM5RSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsR0FBRyxxQkFBcUIsQ0FBQyxNQUFNLENBQUM7UUFDbkYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUN4RCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3RELElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMxRCxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxVQUFVLEdBQUcsbUJBQW1CLENBQUMsSUFBSSxDQUFDO1FBQ3hFLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLDBCQUEwQixHQUFHLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsT0FBTyxDQUFDO1FBQzVFLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLFlBQVksR0FBRyxzQkFBc0IsQ0FBQyxRQUFRLENBQUM7UUFDakYsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsWUFBWSxHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztRQUV6RSxZQUFZO1FBRVosa0NBQWtDO1FBRWxDLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMxRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDeEcsWUFBWTtJQUNkLENBQUM7SUFFRCx5QkFBeUIsQ0FBQyxpQkFBd0M7UUFDaEUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3hHLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUM3QixpQkFBaUIsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUN0RSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUNyQyxDQUFDO0lBQ0osQ0FBQzs7OztZQW5ERixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs0Q0FPSSxNQUFNLFNBQUMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBlYXJhbmNlQW5pbWF0aW9uLCBEaWFsb2dMYXlvdXREaXNwbGF5LCBEaXNhcHBlYXJhbmNlQW5pbWF0aW9uIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9lbnVtcyc7XG5pbXBvcnQgeyBEYXRhQ29udHJvbCB9IGZyb20gJy4uLy4uLy4uL2NvcmUvZ2xvYmFsLWNsYXNzZXMnO1xuaW1wb3J0IHsgVG9hc3RDdXN0b21TdHlsZXMsIFRvYXN0U2V0dGluZ3MgfSBmcm9tICcuL2NsYXNzZXMnO1xuaW1wb3J0IHsgVG9hc3RQb3NpdGlvbkVudW0sIFRvYXN0UHJvZ3Jlc3NCYXJFbnVtLCBUb2FzdFVzZXJWaWV3VHlwZUVudW0gfSBmcm9tICcuL2VudW1zJztcbmltcG9ydCB7IElHbG9iYWxUb2FzdFNldHRpbmdzLCBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVG9hc3ROb3RpZmljYXRpb25Db25maWdTZXJ2aWNlIHtcbiAgYXV0aG9yQ29uZmlnOiBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnID0gbmV3IFRvYXN0U2V0dGluZ3MoKTtcbiAgcHJvZHVjdGlvbkNvbmZpZzogSVRvYXN0Tm90aWZpY2F0aW9uVXNlckNvbmZpZyA9IG5ldyBUb2FzdFNldHRpbmdzKCk7XG4gIHByaXZhdGUgZGF0YUNvbnRyb2wgPSBuZXcgRGF0YUNvbnRyb2woKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KCd0b2FzdE5vdGlmaWNhdGlvbkNvbmZpZycpXG4gICAgcHJpdmF0ZSB1c2VyQ29uZmlnOiBJVG9hc3ROb3RpZmljYXRpb25Vc2VyQ29uZmlnID0ge31cbiAgKSB7XG4gICAgLy8gcmVnaW9uICoqKiB0b2FzdE5vdGlmaWNhdGlvbiB1c2VyQ29uZmlnICh1c2VyIGlucHV0IGFwcC1tb2R1bGUpICoqKlxuICAgIGNvbnN0IHVzZXJDb25maWdCYXNlID0gbmV3IFRvYXN0U2V0dGluZ3MoKTtcblxuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odXNlckNvbmZpZy5Ub2FzdENvcmVDb25maWcsIHVzZXJDb25maWdCYXNlLlRvYXN0Q29yZUNvbmZpZyk7IC8vIHRoaXMgd2lsbCBtYWtlIHN1cmUgdGhhdCBvYmplY3QgaGFzIHJpZ2h0IHByb3BlcnRpZXNcblxuICAgIHVzZXJDb25maWcuVG9hc3RDb3JlQ29uZmlnID0gdXNlckNvbmZpZ0Jhc2UuVG9hc3RDb3JlQ29uZmlnO1xuICAgIC8vIGVuZHJlZ2lvblxuXG4gICAgLy8gcmVnaW9uICoqKiBhdXRob3IgZGVmYXVsdCBjb25maWcgdmFsdWVzIChpZiB0aGVyZSBpcyBubyB1c2VyIGlucHV0KSAqKipcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5Ub2FzdENvcmVDb25maWcuQnV0dG9uUG9zaXRpb24gPSAncmlnaHQnO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLlRvYXN0Q29yZUNvbmZpZy5UZXh0UG9zaXRpb24gPSAnbGVmdCc7XG4gICAgdGhpcy5hdXRob3JDb25maWcuVG9hc3RDb3JlQ29uZmlnLlRvYXN0UG9zaXRpb24gPSBUb2FzdFBvc2l0aW9uRW51bS5UT1BfUklHSFQ7XG4gICAgdGhpcy5hdXRob3JDb25maWcuVG9hc3RDb3JlQ29uZmlnLlByb2dyZXNzQmFyID0gVG9hc3RQcm9ncmVzc0JhckVudW0uSU5DUkVBU0U7XG4gICAgdGhpcy5hdXRob3JDb25maWcuVG9hc3RDb3JlQ29uZmlnLlRvYXN0VXNlclZpZXdUeXBlID0gVG9hc3RVc2VyVmlld1R5cGVFbnVtLlNJTVBMRTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5Ub2FzdENvcmVDb25maWcuQXV0b0Nsb3NlRGVsYXkgPSAyNTAwO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLlRvYXN0Q29yZUNvbmZpZy5EaXNhYmxlSWNvbiA9IGZhbHNlO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLlRvYXN0Q29yZUNvbmZpZy5BbGxvd0hUTUxNZXNzYWdlID0gdHJ1ZTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5Ub2FzdENvcmVDb25maWcuTGF5b3V0VHlwZSA9IERpYWxvZ0xheW91dERpc3BsYXkuTk9ORTtcbiAgICB0aGlzLmF1dGhvckNvbmZpZy5HbG9iYWxTZXR0aW5ncy5BbGxvd2VkTm90aWZpY2F0aW9uc0F0T25jZSA9IDU7XG4gICAgdGhpcy5hdXRob3JDb25maWcuVG9hc3RDb3JlQ29uZmlnLkFuaW1hdGlvbkluID0gQXBwZWFyYW5jZUFuaW1hdGlvbi5aT09NX0lOO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLlRvYXN0Q29yZUNvbmZpZy5BbmltYXRpb25PdXQgPSBEaXNhcHBlYXJhbmNlQW5pbWF0aW9uLlpPT01fT1VUO1xuICAgIHRoaXMuYXV0aG9yQ29uZmlnLlRvYXN0Q29yZUNvbmZpZy5DdXN0b21TdHlsZXMgPSBuZXcgVG9hc3RDdXN0b21TdHlsZXMoKTtcblxuICAgIC8vIGVuZHJlZ2lvblxuXG4gICAgLy8gcmVnaW9uICoqKiBQcm9kdWN0aW9uIHNldHVwICoqKlxuXG4gICAgdGhpcy5zZXRSZXNldEdsb2JhbFRvYXN0Q29uZmlnKCk7XG4gICAgdGhpcy5kYXRhQ29udHJvbC5jb3B5VmFsdWVzRnJvbSh0aGlzLmF1dGhvckNvbmZpZy5Ub2FzdENvcmVDb25maWcsIHRoaXMucHJvZHVjdGlvbkNvbmZpZy5Ub2FzdENvcmVDb25maWcpO1xuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20odGhpcy51c2VyQ29uZmlnLlRvYXN0Q29yZUNvbmZpZywgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLlRvYXN0Q29yZUNvbmZpZyk7XG4gICAgLy8gZW5kcmVnaW9uXG4gIH1cblxuICBzZXRSZXNldEdsb2JhbFRvYXN0Q29uZmlnKGdsb2JhbFRvYXN0Q29uZmlnPzogSUdsb2JhbFRvYXN0U2V0dGluZ3MpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGFDb250cm9sLmNvcHlWYWx1ZXNGcm9tKHRoaXMuYXV0aG9yQ29uZmlnLkdsb2JhbFNldHRpbmdzLCB0aGlzLnByb2R1Y3Rpb25Db25maWcuR2xvYmFsU2V0dGluZ3MpO1xuICAgIHRoaXMuZGF0YUNvbnRyb2wuY29weVZhbHVlc0Zyb20oXG4gICAgICBnbG9iYWxUb2FzdENvbmZpZyA/IGdsb2JhbFRvYXN0Q29uZmlnIDogdGhpcy51c2VyQ29uZmlnLkdsb2JhbFNldHRpbmdzLFxuICAgICAgdGhpcy5wcm9kdWN0aW9uQ29uZmlnLkdsb2JhbFNldHRpbmdzXG4gICAgKTtcbiAgfVxufVxuIl19